-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_aveImpl_double_15_80_1_2_16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_we0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_we1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_439_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_439_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_439_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_439_p_ce : OUT STD_LOGIC;
    grp_fu_443_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_443_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_443_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_443_p_ce : OUT STD_LOGIC );
end;


architecture behav of dut_aveImpl_double_15_80_1_2_16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (81 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (81 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (81 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (81 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (81 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (81 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (81 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (81 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (81 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (81 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_418 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_424 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_430 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal reg_436 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_442 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal reg_448 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_454 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal reg_460 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_reg_621 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_cols_reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal sext_ln290_fu_471_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln290_reg_791 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln290_fu_497_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln290_reg_796 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln300_fu_551_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln300_reg_804 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal add_ln300_1_fu_587_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln300_1_reg_810 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmp33_1_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp33_1_reg_816 : STD_LOGIC_VECTOR (0 downto 0);
    signal values_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_reg_822 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal values_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_1_reg_827 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_reg_832 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_1_reg_837 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_2_reg_842 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal values_load_3_reg_847 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_2_reg_852 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_3_reg_857 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_4_reg_862 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal values_load_5_reg_867 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_4_reg_872 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_5_reg_877 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_6_reg_882 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal values_load_7_reg_887 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_6_reg_892 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_7_reg_897 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_8_reg_902 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal values_load_9_reg_907 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_8_reg_912 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_9_reg_917 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_10_reg_922 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal values_load_11_reg_927 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_10_reg_932 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_11_reg_937 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_12_reg_942 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal values_load_13_reg_947 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_12_reg_952 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_13_reg_957 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_load_14_reg_962 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal values_load_15_reg_967 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_14_reg_972 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_load_15_reg_977 : STD_LOGIC_VECTOR (63 downto 0);
    signal add3_i_4_reg_982 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal add3_i_1_4_reg_987 : STD_LOGIC_VECTOR (63 downto 0);
    signal add3_i_5_reg_992 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal add3_i_1_5_reg_997 : STD_LOGIC_VECTOR (63 downto 0);
    signal add3_i_6_reg_1002 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal add3_i_1_6_reg_1007 : STD_LOGIC_VECTOR (63 downto 0);
    signal add3_i_7_reg_1012 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal add3_i_1_7_reg_1017 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal values_ce0 : STD_LOGIC;
    signal values_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal values_ce1 : STD_LOGIC;
    signal values_we1 : STD_LOGIC;
    signal values_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal values_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal values_1_ce0 : STD_LOGIC;
    signal values_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal values_1_ce1 : STD_LOGIC;
    signal values_1_we1 : STD_LOGIC;
    signal values_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_idle : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_ready : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_idle : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_ready : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_idle : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_ready : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal i_fu_102 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal add_ln290_1_fu_521_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln290_1_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_fu_401_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal grp_fu_405_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sext_ln290_fu_471_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln290_fu_475_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln290_fu_481_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln290_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln290_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_487_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln290_1_fu_512_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln290_fu_508_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_22_fu_535_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_fu_543_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln300_1_fu_567_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln300_fu_563_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_24_fu_571_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_579_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_cast_fu_593_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_401_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_401_ce : STD_LOGIC;
    signal grp_fu_405_ce : STD_LOGIC;
    signal grp_fu_414_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_1022_ce : STD_LOGIC;
    signal grp_fu_1026_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (81 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        values_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_1_ce1 : OUT STD_LOGIC;
        values_1_we1 : OUT STD_LOGIC;
        values_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        values_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_ce1 : OUT STD_LOGIC;
        values_we1 : OUT STD_LOGIC;
        values_d1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln300 : IN STD_LOGIC_VECTOR (10 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln300_1 : IN STD_LOGIC_VECTOR (10 downto 0);
        values_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_1_ce0 : OUT STD_LOGIC;
        values_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        values_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_1_ce1 : OUT STD_LOGIC;
        values_1_we1 : OUT STD_LOGIC;
        values_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        values_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_ce0 : OUT STD_LOGIC;
        values_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        values_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_ce1 : OUT STD_LOGIC;
        values_we1 : OUT STD_LOGIC;
        values_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        d_cols : IN STD_LOGIC_VECTOR (63 downto 0);
        cmp33_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_401_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_401_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_ce : OUT STD_LOGIC;
        grp_fu_405_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_405_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_405_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_405_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_405_p_ce : OUT STD_LOGIC;
        grp_fu_1022_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1022_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1022_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1022_p_ce : OUT STD_LOGIC;
        grp_fu_1026_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1026_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1026_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1026_p_ce : OUT STD_LOGIC );
    end component;


    component dut_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln300 : IN STD_LOGIC_VECTOR (10 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_we0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_we1 : OUT STD_LOGIC;
        input_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln300_1 : IN STD_LOGIC_VECTOR (10 downto 0);
        value_r : IN STD_LOGIC_VECTOR (63 downto 0);
        cmp33_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        value_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_401_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_401_p_ce : OUT STD_LOGIC );
    end component;


    component dut_dadddsub_64ns_64ns_64_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dadd_64ns_64ns_64_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_ddiv_64ns_64ns_64_31_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_sitodp_32ns_64_5_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dmul_64ns_64ns_64_8_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_aveImpl_double_15_80_1_2_16_s_values_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    values_U : component dut_aveImpl_double_15_80_1_2_16_s_values_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => values_address0,
        ce0 => values_ce0,
        q0 => values_q0,
        address1 => values_address1,
        ce1 => values_ce1,
        we1 => values_we1,
        d1 => values_d1,
        q1 => values_q1);

    values_1_U : component dut_aveImpl_double_15_80_1_2_16_s_values_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => values_1_address0,
        ce0 => values_1_ce0,
        q0 => values_1_q0,
        address1 => values_1_address1,
        ce1 => values_1_ce1,
        we1 => values_1_we1,
        d1 => values_1_d1,
        q1 => values_1_q1);

    grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368 : component dut_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start,
        ap_done => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done,
        ap_idle => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_idle,
        ap_ready => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_ready,
        values_1_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_address1,
        values_1_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_ce1,
        values_1_we1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_we1,
        values_1_d1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_d1,
        values_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_address1,
        values_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_ce1,
        values_we1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_we1,
        values_d1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_d1);

    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376 : component dut_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start,
        ap_done => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done,
        ap_idle => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_idle,
        ap_ready => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_ready,
        cols => cols,
        add_ln300 => add_ln300_reg_804,
        input_r_address0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address0,
        input_r_ce0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address1,
        input_r_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce1,
        input_r_q1 => input_r_q1,
        add_ln300_1 => add_ln300_1_reg_810,
        values_1_address0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address0,
        values_1_ce0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce0,
        values_1_q0 => values_1_q0,
        values_1_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address1,
        values_1_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce1,
        values_1_we1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_we1,
        values_1_d1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_d1,
        values_address0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address0,
        values_ce0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce0,
        values_q0 => values_q0,
        values_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address1,
        values_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce1,
        values_we1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_we1,
        values_d1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_d1,
        d_cols => d_cols_reg_626,
        cmp33_1 => cmp33_1_reg_816,
        grp_fu_401_p_din0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din0,
        grp_fu_401_p_din1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din1,
        grp_fu_401_p_opcode => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_opcode,
        grp_fu_401_p_dout0 => grp_fu_401_p2,
        grp_fu_401_p_ce => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_ce,
        grp_fu_405_p_din0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din0,
        grp_fu_405_p_din1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din1,
        grp_fu_405_p_opcode => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_opcode,
        grp_fu_405_p_dout0 => grp_fu_405_p2,
        grp_fu_405_p_ce => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_ce,
        grp_fu_1022_p_din0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din0,
        grp_fu_1022_p_din1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din1,
        grp_fu_1022_p_dout0 => grp_fu_439_p_dout0,
        grp_fu_1022_p_ce => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_ce,
        grp_fu_1026_p_din0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din0,
        grp_fu_1026_p_din1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din1,
        grp_fu_1026_p_dout0 => grp_fu_443_p_dout0,
        grp_fu_1026_p_ce => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_ce);

    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389 : component dut_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start,
        ap_done => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done,
        ap_idle => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_idle,
        ap_ready => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_ready,
        cols => cols,
        add_ln300 => add_ln300_reg_804,
        input_r_address0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address0,
        input_r_ce0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce0,
        input_r_we0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we0,
        input_r_d0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address1,
        input_r_ce1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce1,
        input_r_we1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we1,
        input_r_d1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d1,
        input_r_q1 => input_r_q1,
        add_ln300_1 => add_ln300_1_reg_810,
        value_r => reg_418,
        cmp33_1 => cmp33_1_reg_816,
        value_1 => reg_424,
        grp_fu_401_p_din0 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din0,
        grp_fu_401_p_din1 => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din1,
        grp_fu_401_p_opcode => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_opcode,
        grp_fu_401_p_dout0 => grp_fu_401_p2,
        grp_fu_401_p_ce => grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_ce);

    dadddsub_64ns_64ns_64_8_full_dsp_1_U23 : component dut_dadddsub_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_401_p0,
        din1 => grp_fu_401_p1,
        opcode => grp_fu_401_opcode,
        ce => grp_fu_401_ce,
        dout => grp_fu_401_p2);

    dadd_64ns_64ns_64_8_full_dsp_1_U24 : component dut_dadd_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_405_p0,
        din1 => grp_fu_405_p1,
        ce => grp_fu_405_ce,
        dout => grp_fu_405_p2);

    ddiv_64ns_64ns_64_31_no_dsp_1_U25 : component dut_ddiv_64ns_64ns_64_31_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => conv_reg_621,
        ce => ap_const_logic_1,
        dout => grp_fu_409_p2);

    sitodp_32ns_64_5_no_dsp_1_U26 : component dut_sitodp_32ns_64_5_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cols,
        ce => grp_fu_414_ce,
        dout => grp_fu_414_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_ready = ap_const_logic_1)) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_ready = ap_const_logic_1)) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_ready = ap_const_logic_1)) then 
                    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_102 <= ap_const_lv31_0;
            elsif (((icmp_ln290_1_fu_516_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                i_fu_102 <= add_ln290_1_fu_521_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                add3_i_1_4_reg_987 <= grp_fu_405_p2;
                add3_i_4_reg_982 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                add3_i_1_5_reg_997 <= grp_fu_405_p2;
                add3_i_5_reg_992 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                add3_i_1_6_reg_1007 <= grp_fu_405_p2;
                add3_i_6_reg_1002 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                add3_i_1_7_reg_1017 <= grp_fu_405_p2;
                add3_i_7_reg_1012 <= grp_fu_401_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                    add_ln300_1_reg_810(10 downto 5) <= add_ln300_1_fu_587_p2(10 downto 5);
                    add_ln300_reg_804(10 downto 5) <= add_ln300_fu_551_p2(10 downto 5);
                cmp33_1_reg_816 <= cmp33_1_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                conv_reg_621 <= grp_fu_414_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                d_cols_reg_626 <= grp_fu_409_p2;
                select_ln290_reg_796 <= select_ln290_fu_497_p3;
                sext_ln290_reg_791 <= sext_ln290_fu_471_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49))) then
                reg_418 <= grp_fu_401_p2;
                reg_424 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state50))) then
                reg_430 <= grp_fu_401_p2;
                reg_436 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state51))) then
                reg_442 <= grp_fu_401_p2;
                reg_448 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state52))) then
                reg_454 <= grp_fu_401_p2;
                reg_460 <= grp_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                values_1_load_10_reg_932 <= values_1_q1;
                values_1_load_11_reg_937 <= values_1_q0;
                values_load_10_reg_922 <= values_q1;
                values_load_11_reg_927 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                values_1_load_12_reg_952 <= values_1_q1;
                values_1_load_13_reg_957 <= values_1_q0;
                values_load_12_reg_942 <= values_q1;
                values_load_13_reg_947 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                values_1_load_14_reg_972 <= values_1_q1;
                values_1_load_15_reg_977 <= values_1_q0;
                values_load_14_reg_962 <= values_q1;
                values_load_15_reg_967 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                values_1_load_1_reg_837 <= values_1_q0;
                values_1_load_reg_832 <= values_1_q1;
                values_load_1_reg_827 <= values_q0;
                values_load_reg_822 <= values_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                values_1_load_2_reg_852 <= values_1_q1;
                values_1_load_3_reg_857 <= values_1_q0;
                values_load_2_reg_842 <= values_q1;
                values_load_3_reg_847 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                values_1_load_4_reg_872 <= values_1_q1;
                values_1_load_5_reg_877 <= values_1_q0;
                values_load_4_reg_862 <= values_q1;
                values_load_5_reg_867 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                values_1_load_6_reg_892 <= values_1_q1;
                values_1_load_7_reg_897 <= values_1_q0;
                values_load_6_reg_882 <= values_q1;
                values_load_7_reg_887 <= values_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                values_1_load_8_reg_912 <= values_1_q1;
                values_1_load_9_reg_917 <= values_1_q0;
                values_load_8_reg_902 <= values_q1;
                values_load_9_reg_907 <= values_q0;
            end if;
        end if;
    end process;
    add_ln300_reg_804(4 downto 0) <= "00000";
    add_ln300_1_reg_810(4 downto 0) <= "10000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state37, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state39, ap_CS_fsm_state82, icmp_ln290_1_fu_516_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln290_1_fu_516_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state82))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln290_1_fu_521_p2 <= std_logic_vector(unsigned(i_fu_102) + unsigned(ap_const_lv31_1));
    add_ln290_fu_481_p0 <= rows;
    add_ln290_fu_481_p2 <= std_logic_vector(signed(add_ln290_fu_481_p0) + signed(ap_const_lv32_1));
    add_ln300_1_fu_587_p2 <= std_logic_vector(unsigned(tmp_24_fu_571_p3) + unsigned(tmp_25_fu_579_p3));
    add_ln300_fu_551_p2 <= std_logic_vector(unsigned(tmp_22_fu_535_p3) + unsigned(tmp_23_fu_543_p3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done)
    begin
        if ((grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done)
    begin
        if ((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done)
    begin
        if ((grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state37, icmp_ln290_1_fu_516_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln290_1_fu_516_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state37, icmp_ln290_1_fu_516_p2)
    begin
        if (((icmp_ln290_1_fu_516_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp33_1_fu_597_p2 <= "1" when (signed(p_cast_fu_593_p1) < signed(sext_ln290_reg_791)) else "0";
    empty_fu_557_p2 <= (shl_ln_fu_527_p3 or ap_const_lv32_1);
    grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_start_reg;
    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_ap_start_reg;
    grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_ap_start_reg;

    grp_fu_1022_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_ce, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1022_ce <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_ce;
        else 
            grp_fu_1022_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1026_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_ce, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1026_ce <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_ce;
        else 
            grp_fu_1026_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_401_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_ce, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_ce, ap_CS_fsm_state39, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_401_ce <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_401_ce <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_ce;
        else 
            grp_fu_401_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_401_opcode_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state64, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_opcode, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_opcode, ap_CS_fsm_state39, ap_CS_fsm_state82, ap_CS_fsm_state57, ap_CS_fsm_state65, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_401_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_401_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_opcode),2));
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_401_opcode <= ap_const_lv2_0;
        else 
            grp_fu_401_opcode <= "XX";
        end if; 
    end process;


    grp_fu_401_p0_assign_proc : process(reg_418, ap_CS_fsm_state49, reg_430, reg_442, reg_454, ap_CS_fsm_state64, values_load_reg_822, values_load_2_reg_842, ap_CS_fsm_state42, values_load_4_reg_862, ap_CS_fsm_state43, values_load_6_reg_882, ap_CS_fsm_state44, values_load_8_reg_902, ap_CS_fsm_state45, values_load_10_reg_922, ap_CS_fsm_state46, values_load_12_reg_942, ap_CS_fsm_state47, values_load_14_reg_962, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din0, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din0, ap_CS_fsm_state39, ap_CS_fsm_state82, ap_CS_fsm_state57, ap_CS_fsm_state65, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_401_p0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_401_p0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_401_p0 <= reg_454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_401_p0 <= reg_442;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_401_p0 <= reg_430;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_fu_401_p0 <= reg_418;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_401_p0 <= values_load_14_reg_962;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_401_p0 <= values_load_12_reg_942;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_401_p0 <= values_load_10_reg_922;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_401_p0 <= values_load_8_reg_902;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_401_p0 <= values_load_6_reg_882;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_401_p0 <= values_load_4_reg_862;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_401_p0 <= values_load_2_reg_842;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_401_p0 <= values_load_reg_822;
        else 
            grp_fu_401_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_401_p1_assign_proc : process(ap_CS_fsm_state49, reg_430, reg_442, reg_454, ap_CS_fsm_state64, values_load_1_reg_827, ap_CS_fsm_state42, values_load_3_reg_847, ap_CS_fsm_state43, values_load_5_reg_867, ap_CS_fsm_state44, values_load_7_reg_887, ap_CS_fsm_state45, values_load_9_reg_907, ap_CS_fsm_state46, values_load_11_reg_927, ap_CS_fsm_state47, values_load_13_reg_947, ap_CS_fsm_state48, values_load_15_reg_967, add3_i_4_reg_982, add3_i_5_reg_992, ap_CS_fsm_state54, add3_i_6_reg_1002, ap_CS_fsm_state55, add3_i_7_reg_1012, ap_CS_fsm_state56, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din1, ap_CS_fsm_state39, ap_CS_fsm_state82, ap_CS_fsm_state57, ap_CS_fsm_state65, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_401_p1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_grp_fu_401_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_401_p1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_401_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_fu_401_p1 <= reg_430;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_401_p1 <= reg_454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_fu_401_p1 <= reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_401_p1 <= add3_i_7_reg_1012;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_401_p1 <= add3_i_6_reg_1002;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_401_p1 <= add3_i_5_reg_992;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            grp_fu_401_p1 <= add3_i_4_reg_982;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_401_p1 <= values_load_15_reg_967;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_401_p1 <= values_load_13_reg_947;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_401_p1 <= values_load_11_reg_927;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_401_p1 <= values_load_9_reg_907;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_401_p1 <= values_load_7_reg_887;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_401_p1 <= values_load_5_reg_867;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_401_p1 <= values_load_3_reg_847;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_401_p1 <= values_load_1_reg_827;
        else 
            grp_fu_401_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_ce, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_405_ce <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_ce;
        else 
            grp_fu_405_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_405_p0_assign_proc : process(ap_CS_fsm_state49, reg_424, reg_436, reg_448, ap_CS_fsm_state64, reg_460, values_1_load_reg_832, ap_CS_fsm_state42, values_1_load_2_reg_852, ap_CS_fsm_state43, values_1_load_4_reg_872, ap_CS_fsm_state44, values_1_load_6_reg_892, ap_CS_fsm_state45, values_1_load_8_reg_912, ap_CS_fsm_state46, values_1_load_10_reg_932, ap_CS_fsm_state47, values_1_load_12_reg_952, ap_CS_fsm_state48, values_1_load_14_reg_972, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din0, ap_CS_fsm_state39, ap_CS_fsm_state57, ap_CS_fsm_state65, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_405_p0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_405_p0 <= reg_460;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_405_p0 <= reg_448;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_405_p0 <= reg_436;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            grp_fu_405_p0 <= reg_424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_405_p0 <= values_1_load_14_reg_972;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_405_p0 <= values_1_load_12_reg_952;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_405_p0 <= values_1_load_10_reg_932;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_405_p0 <= values_1_load_8_reg_912;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_405_p0 <= values_1_load_6_reg_892;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_405_p0 <= values_1_load_4_reg_872;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_405_p0 <= values_1_load_2_reg_852;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_405_p0 <= values_1_load_reg_832;
        else 
            grp_fu_405_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p1_assign_proc : process(ap_CS_fsm_state49, reg_436, reg_448, ap_CS_fsm_state64, reg_460, values_1_load_1_reg_837, ap_CS_fsm_state42, values_1_load_3_reg_857, ap_CS_fsm_state43, values_1_load_5_reg_877, ap_CS_fsm_state44, values_1_load_7_reg_897, ap_CS_fsm_state45, values_1_load_9_reg_917, ap_CS_fsm_state46, values_1_load_11_reg_937, ap_CS_fsm_state47, values_1_load_13_reg_957, ap_CS_fsm_state48, values_1_load_15_reg_977, add3_i_1_4_reg_987, ap_CS_fsm_state54, add3_i_1_5_reg_997, ap_CS_fsm_state55, add3_i_1_6_reg_1007, ap_CS_fsm_state56, add3_i_1_7_reg_1017, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din1, ap_CS_fsm_state39, ap_CS_fsm_state57, ap_CS_fsm_state65, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_405_p1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_405_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_fu_405_p1 <= reg_436;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_405_p1 <= reg_460;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            grp_fu_405_p1 <= reg_448;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_405_p1 <= add3_i_1_7_reg_1017;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_405_p1 <= add3_i_1_6_reg_1007;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_405_p1 <= add3_i_1_5_reg_997;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            grp_fu_405_p1 <= add3_i_1_4_reg_987;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_405_p1 <= values_1_load_15_reg_977;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_405_p1 <= values_1_load_13_reg_957;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_405_p1 <= values_1_load_11_reg_937;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_405_p1 <= values_1_load_9_reg_917;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_405_p1 <= values_1_load_7_reg_897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_405_p1 <= values_1_load_5_reg_877;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_405_p1 <= values_1_load_3_reg_857;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_405_p1 <= values_1_load_1_reg_837;
        else 
            grp_fu_405_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_414_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_414_ce <= ap_const_logic_1;
        else 
            grp_fu_414_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_439_p_ce <= grp_fu_1022_ce;
    grp_fu_439_p_din0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din0;
    grp_fu_439_p_din1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1022_p_din1;
    grp_fu_443_p_ce <= grp_fu_1026_ce;
    grp_fu_443_p_din0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din0;
    grp_fu_443_p_din1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_grp_fu_1026_p_din1;
    icmp_ln290_1_fu_516_p2 <= "1" when (i_fu_102 = select_ln290_reg_796) else "0";
    icmp_ln290_fu_475_p0 <= rows;
    icmp_ln290_fu_475_p2 <= "1" when (signed(icmp_ln290_fu_475_p0) > signed(ap_const_lv32_0)) else "0";

    input_r_address0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address0, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address0, ap_CS_fsm_state39, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_address0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_r_address0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address0;
        else 
            input_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address1, ap_CS_fsm_state39, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_r_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_address1;
        else 
            input_r_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce0, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce0, ap_CS_fsm_state39, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_ce0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_r_ce0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce0;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce1, ap_CS_fsm_state39, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_r_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_input_r_ce1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_r_d0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d0;
    input_r_d1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_d1;

    input_r_we0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_we0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we0;
        else 
            input_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_we1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we1, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            input_r_we1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a2_fu_389_input_r_we1;
        else 
            input_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_557_p2),33));
    select_ln290_fu_497_p3 <= 
        tmp_s_fu_487_p4 when (icmp_ln290_fu_475_p2(0) = '1') else 
        ap_const_lv31_0;
    sext_ln290_fu_471_p0 <= rows;
        sext_ln290_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln290_fu_471_p0),33));

    shl_ln_fu_527_p3 <= (i_fu_102 & ap_const_lv1_0);
    tmp_22_fu_535_p3 <= (trunc_ln290_1_fu_512_p1 & ap_const_lv7_0);
    tmp_23_fu_543_p3 <= (trunc_ln290_fu_508_p1 & ap_const_lv5_0);
    tmp_24_fu_571_p3 <= (trunc_ln300_1_fu_567_p1 & ap_const_lv6_0);
    tmp_25_fu_579_p3 <= (trunc_ln300_fu_563_p1 & ap_const_lv4_0);
    tmp_s_fu_487_p4 <= add_ln290_fu_481_p2(31 downto 1);
    trunc_ln290_1_fu_512_p1 <= i_fu_102(4 - 1 downto 0);
    trunc_ln290_fu_508_p1 <= i_fu_102(6 - 1 downto 0);
    trunc_ln300_1_fu_567_p1 <= empty_fu_557_p2(5 - 1 downto 0);
    trunc_ln300_fu_563_p1 <= empty_fu_557_p2(7 - 1 downto 0);

    values_1_address0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            values_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            values_1_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            values_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            values_1_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            values_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            values_1_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            values_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            values_1_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_address0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address0;
        else 
            values_1_address0 <= "XXXX";
        end if; 
    end process;


    values_1_address1_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_address1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address1, ap_CS_fsm_state2, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            values_1_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            values_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            values_1_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            values_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            values_1_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            values_1_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            values_1_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            values_1_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_1_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_address1;
        else 
            values_1_address1 <= "XXXX";
        end if; 
    end process;


    values_1_ce0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            values_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_ce0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce0;
        else 
            values_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    values_1_ce1_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_ce1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce1, ap_CS_fsm_state2, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            values_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_1_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_ce1;
        else 
            values_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    values_1_d1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_d1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_d1, ap_CS_fsm_state2, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_d1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_1_d1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_d1;
        else 
            values_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    values_1_we1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_we1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_we1, ap_CS_fsm_state2, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_1_we1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_1_we1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_1_we1;
        else 
            values_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    values_address0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            values_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            values_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            values_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            values_address0 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            values_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            values_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            values_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            values_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_address0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address0;
        else 
            values_address0 <= "XXXX";
        end if; 
    end process;


    values_address1_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_address1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address1, ap_CS_fsm_state2, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            values_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            values_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            values_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            values_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            values_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            values_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            values_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            values_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_address1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_address1;
        else 
            values_address1 <= "XXXX";
        end if; 
    end process;


    values_ce0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            values_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_ce0 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce0;
        else 
            values_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    values_ce1_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_ce1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce1, ap_CS_fsm_state2, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            values_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_ce1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_ce1;
        else 
            values_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    values_d1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_d1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_d1, ap_CS_fsm_state2, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_d1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_d1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_d1;
        else 
            values_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    values_we1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_we1, grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_we1, ap_CS_fsm_state2, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            values_we1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_loop_a1_fu_376_values_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            values_we1 <= grp_aveImpl_double_15_80_1_2_16_Pipeline_VITIS_LOOP_283_1_fu_368_values_we1;
        else 
            values_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
