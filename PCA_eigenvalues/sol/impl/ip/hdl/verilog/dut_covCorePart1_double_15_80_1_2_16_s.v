// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dut_covCorePart1_double_15_80_1_2_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        rows,
        cols,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        values2Strm_0_din,
        values2Strm_0_num_data_valid,
        values2Strm_0_fifo_cap,
        values2Strm_0_full_n,
        values2Strm_0_write,
        values2Strm_1_din,
        values2Strm_1_num_data_valid,
        values2Strm_1_fifo_cap,
        values2Strm_1_full_n,
        values2Strm_1_write,
        rows_c_din,
        rows_c_num_data_valid,
        rows_c_fifo_cap,
        rows_c_full_n,
        rows_c_write,
        cols_c_din,
        cols_c_num_data_valid,
        cols_c_fifo_cap,
        cols_c_full_n,
        cols_c_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] rows;
input  [31:0] cols;
output  [10:0] input_r_address0;
output   input_r_ce0;
input  [63:0] input_r_q0;
output  [10:0] input_r_address1;
output   input_r_ce1;
input  [63:0] input_r_q1;
output  [63:0] values2Strm_0_din;
input  [5:0] values2Strm_0_num_data_valid;
input  [5:0] values2Strm_0_fifo_cap;
input   values2Strm_0_full_n;
output   values2Strm_0_write;
output  [63:0] values2Strm_1_din;
input  [5:0] values2Strm_1_num_data_valid;
input  [5:0] values2Strm_1_fifo_cap;
input   values2Strm_1_full_n;
output   values2Strm_1_write;
output  [31:0] rows_c_din;
input  [2:0] rows_c_num_data_valid;
input  [2:0] rows_c_fifo_cap;
input   rows_c_full_n;
output   rows_c_write;
output  [31:0] cols_c_din;
input  [2:0] cols_c_num_data_valid;
input  [2:0] cols_c_fifo_cap;
input   cols_c_full_n;
output   cols_c_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg values2Strm_0_write;
reg values2Strm_1_write;
reg rows_c_write;
reg cols_c_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    rows_c_blk_n;
reg    cols_c_blk_n;
reg    ap_block_state1;
wire   [30:0] smax_fu_187_p3;
reg   [30:0] smax_reg_408;
wire   [31:0] zext_ln194_fu_216_p1;
reg   [31:0] zext_ln194_reg_416;
wire    ap_CS_fsm_state2;
wire   [30:0] add_ln194_fu_225_p2;
reg   [30:0] add_ln194_reg_425;
wire   [10:0] add_ln206_fu_247_p2;
reg   [10:0] add_ln206_reg_430;
reg   [30:0] trunc_ln_reg_435;
wire   [30:0] add_ln197_fu_276_p2;
reg   [30:0] add_ln197_reg_443;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln210_fu_306_p2;
reg   [10:0] add_ln210_reg_448;
wire   [0:0] cmp79_fu_312_p2;
reg   [0:0] cmp79_reg_453;
wire   [0:0] cmp18_not_fu_318_p2;
reg   [0:0] cmp18_not_reg_458;
wire   [0:0] cmp30_fu_323_p2;
reg   [0:0] cmp30_reg_463;
wire   [10:0] add_ln210_1_fu_358_p2;
reg   [10:0] add_ln210_1_reg_468;
wire   [0:0] cmp30_1_fu_364_p2;
reg   [0:0] cmp30_1_reg_473;
wire   [63:0] values2_q0;
wire   [63:0] values2_1_q0;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_idle;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready;
wire   [63:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write;
wire   [63:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write;
wire   [10:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0;
wire   [10:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1;
wire   [3:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0;
wire   [3:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1;
wire   [63:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1;
wire   [3:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0;
wire   [3:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1;
wire    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1;
wire   [63:0] grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1;
reg   [30:0] j_reg_142;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln194_fu_220_p2;
reg    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [31:0] indvars_iv18_fu_98;
wire   [31:0] add_ln194_1_fu_369_p2;
wire   [0:0] icmp_ln197_fu_271_p2;
reg   [30:0] i_fu_102;
wire   [0:0] empty_92_fu_181_p2;
wire   [30:0] empty_fu_177_p1;
wire   [4:0] trunc_ln194_1_fu_212_p1;
wire   [6:0] trunc_ln194_fu_208_p1;
wire   [10:0] tmp_s_fu_231_p3;
wire   [10:0] tmp_16_fu_239_p3;
wire   [3:0] trunc_ln197_1_fu_267_p1;
wire   [5:0] trunc_ln197_fu_263_p1;
wire   [10:0] tmp_18_fu_290_p3;
wire   [10:0] tmp_19_fu_298_p3;
wire   [31:0] tmp_17_fu_282_p3;
wire   [31:0] empty_93_fu_328_p2;
wire   [4:0] trunc_ln210_1_fu_338_p1;
wire   [6:0] trunc_ln210_fu_334_p1;
wire   [10:0] tmp_20_fu_342_p3;
wire   [10:0] tmp_21_fu_350_p3;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg = 1'b0;
#0 indvars_iv18_fu_98 = 32'd0;
#0 i_fu_102 = 31'd0;
end

dut_covCorePart1_double_15_80_1_2_16_s_values2_RAM_2P_LUTRAM_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
values2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0),
    .ce0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0),
    .q0(values2_q0),
    .address1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1),
    .ce1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1),
    .we1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1),
    .d1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1)
);

dut_covCorePart1_double_15_80_1_2_16_s_values2_RAM_2P_LUTRAM_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
values2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0),
    .ce0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0),
    .q0(values2_1_q0),
    .address1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1),
    .ce1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1),
    .we1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1),
    .d1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1)
);

dut_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2 grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start),
    .ap_done(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done),
    .ap_idle(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_idle),
    .ap_ready(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready),
    .values2Strm_0_din(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din),
    .values2Strm_0_num_data_valid(6'd0),
    .values2Strm_0_fifo_cap(6'd0),
    .values2Strm_0_full_n(values2Strm_0_full_n),
    .values2Strm_0_write(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write),
    .values2Strm_1_din(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din),
    .values2Strm_1_num_data_valid(6'd0),
    .values2Strm_1_fifo_cap(6'd0),
    .values2Strm_1_full_n(values2Strm_1_full_n),
    .values2Strm_1_write(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write),
    .smax(smax_reg_408),
    .add_ln206(add_ln206_reg_430),
    .input_r_address0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0),
    .input_r_ce0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0),
    .input_r_q0(input_r_q0),
    .input_r_address1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1),
    .input_r_ce1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1),
    .input_r_q1(input_r_q1),
    .add_ln210(add_ln210_reg_448),
    .add_ln210_1(add_ln210_1_reg_468),
    .values2_1_address0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0),
    .values2_1_ce0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0),
    .values2_1_q0(values2_1_q0),
    .values2_1_address1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1),
    .values2_1_ce1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1),
    .values2_1_we1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1),
    .values2_1_d1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1),
    .values2_address0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0),
    .values2_ce0(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0),
    .values2_q0(values2_q0),
    .values2_address1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1),
    .values2_ce1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1),
    .values2_we1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1),
    .values2_d1(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1),
    .cols(cols),
    .cmp18_not(cmp18_not_reg_458),
    .cmp30_1(cmp30_1_reg_473),
    .cmp30(cmp30_reg_463),
    .cmp79(cmp79_reg_453)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln194_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= 1'b1;
        end else if ((grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready == 1'b1)) begin
            grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_102 <= 31'd0;
    end else if (((icmp_ln197_fu_271_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_fu_102 <= add_ln194_reg_425;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv18_fu_98 <= 32'd4;
    end else if (((icmp_ln197_fu_271_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv18_fu_98 <= add_ln194_1_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln194_fu_220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_142 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done == 1'b1))) begin
        j_reg_142 <= add_ln197_reg_443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln194_reg_425 <= add_ln194_fu_225_p2;
        add_ln206_reg_430[10 : 4] <= add_ln206_fu_247_p2[10 : 4];
        trunc_ln_reg_435 <= {{indvars_iv18_fu_98[31:1]}};
        zext_ln194_reg_416[30 : 0] <= zext_ln194_fu_216_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln197_reg_443 <= add_ln197_fu_276_p2;
        add_ln210_1_reg_468[10 : 5] <= add_ln210_1_fu_358_p2[10 : 5];
        add_ln210_reg_448[10 : 5] <= add_ln210_fu_306_p2[10 : 5];
        cmp18_not_reg_458 <= cmp18_not_fu_318_p2;
        cmp30_1_reg_473 <= cmp30_1_fu_364_p2;
        cmp30_reg_463 <= cmp30_fu_323_p2;
        cmp79_reg_453 <= cmp79_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        smax_reg_408 <= smax_fu_187_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln194_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_c_blk_n = cols_c_full_n;
    end else begin
        cols_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_c_write = 1'b1;
    end else begin
        cols_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln194_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_c_blk_n = rows_c_full_n;
    end else begin
        rows_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_c_write = 1'b1;
    end else begin
        rows_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        values2Strm_0_write = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write;
    end else begin
        values2Strm_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        values2Strm_1_write = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write;
    end else begin
        values2Strm_1_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln194_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln197_fu_271_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln194_1_fu_369_p2 = (indvars_iv18_fu_98 + 32'd1);

assign add_ln194_fu_225_p2 = (i_fu_102 + 31'd1);

assign add_ln197_fu_276_p2 = (j_reg_142 + 31'd1);

assign add_ln206_fu_247_p2 = (tmp_s_fu_231_p3 + tmp_16_fu_239_p3);

assign add_ln210_1_fu_358_p2 = (tmp_20_fu_342_p3 + tmp_21_fu_350_p3);

assign add_ln210_fu_306_p2 = (tmp_18_fu_290_p3 + tmp_19_fu_298_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((cols_c_full_n == 1'b0) | (rows_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign cmp18_not_fu_318_p2 = ((j_reg_142 > i_fu_102) ? 1'b1 : 1'b0);

assign cmp30_1_fu_364_p2 = ((empty_93_fu_328_p2 > zext_ln194_reg_416) ? 1'b1 : 1'b0);

assign cmp30_fu_323_p2 = ((tmp_17_fu_282_p3 > zext_ln194_reg_416) ? 1'b1 : 1'b0);

assign cmp79_fu_312_p2 = ((j_reg_142 == 31'd0) ? 1'b1 : 1'b0);

assign cols_c_din = cols;

assign empty_92_fu_181_p2 = (($signed(cols) > $signed(32'd16)) ? 1'b1 : 1'b0);

assign empty_93_fu_328_p2 = (tmp_17_fu_282_p3 | 32'd1);

assign empty_fu_177_p1 = cols[30:0];

assign grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg;

assign icmp_ln194_fu_220_p2 = (($signed(zext_ln194_fu_216_p1) < $signed(rows)) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_271_p2 = ((j_reg_142 == trunc_ln_reg_435) ? 1'b1 : 1'b0);

assign input_r_address0 = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0;

assign input_r_address1 = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1;

assign input_r_ce0 = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0;

assign input_r_ce1 = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1;

assign rows_c_din = rows;

assign smax_fu_187_p3 = ((empty_92_fu_181_p2[0:0] == 1'b1) ? empty_fu_177_p1 : 31'd16);

assign start_out = real_start;

assign tmp_16_fu_239_p3 = {{trunc_ln194_fu_208_p1}, {4'd0}};

assign tmp_17_fu_282_p3 = {{j_reg_142}, {1'd0}};

assign tmp_18_fu_290_p3 = {{trunc_ln197_1_fu_267_p1}, {7'd0}};

assign tmp_19_fu_298_p3 = {{trunc_ln197_fu_263_p1}, {5'd0}};

assign tmp_20_fu_342_p3 = {{trunc_ln210_1_fu_338_p1}, {6'd0}};

assign tmp_21_fu_350_p3 = {{trunc_ln210_fu_334_p1}, {4'd0}};

assign tmp_s_fu_231_p3 = {{trunc_ln194_1_fu_212_p1}, {6'd0}};

assign trunc_ln194_1_fu_212_p1 = i_fu_102[4:0];

assign trunc_ln194_fu_208_p1 = i_fu_102[6:0];

assign trunc_ln197_1_fu_267_p1 = j_reg_142[3:0];

assign trunc_ln197_fu_263_p1 = j_reg_142[5:0];

assign trunc_ln210_1_fu_338_p1 = empty_93_fu_328_p2[4:0];

assign trunc_ln210_fu_334_p1 = empty_93_fu_328_p2[6:0];

assign values2Strm_0_din = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din;

assign values2Strm_1_din = grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din;

assign zext_ln194_fu_216_p1 = i_fu_102;

always @ (posedge ap_clk) begin
    zext_ln194_reg_416[31] <= 1'b0;
    add_ln206_reg_430[3:0] <= 4'b0000;
    add_ln210_reg_448[4:0] <= 5'b00000;
    add_ln210_1_reg_468[4:0] <= 5'b10000;
end

endmodule //dut_covCorePart1_double_15_80_1_2_16_s
