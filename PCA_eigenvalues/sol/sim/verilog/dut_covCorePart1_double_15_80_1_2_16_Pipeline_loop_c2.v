// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dut_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        values2Strm_0_din,
        values2Strm_0_num_data_valid,
        values2Strm_0_fifo_cap,
        values2Strm_0_full_n,
        values2Strm_0_write,
        values2Strm_1_din,
        values2Strm_1_num_data_valid,
        values2Strm_1_fifo_cap,
        values2Strm_1_full_n,
        values2Strm_1_write,
        smax,
        add_ln206,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        add_ln210,
        add_ln210_1,
        values2_1_address0,
        values2_1_ce0,
        values2_1_q0,
        values2_1_address1,
        values2_1_ce1,
        values2_1_we1,
        values2_1_d1,
        values2_address0,
        values2_ce0,
        values2_q0,
        values2_address1,
        values2_ce1,
        values2_we1,
        values2_d1,
        cols,
        cmp18_not,
        cmp30_1,
        cmp30,
        cmp79
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] values2Strm_0_din;
input  [5:0] values2Strm_0_num_data_valid;
input  [5:0] values2Strm_0_fifo_cap;
input   values2Strm_0_full_n;
output   values2Strm_0_write;
output  [63:0] values2Strm_1_din;
input  [5:0] values2Strm_1_num_data_valid;
input  [5:0] values2Strm_1_fifo_cap;
input   values2Strm_1_full_n;
output   values2Strm_1_write;
input  [30:0] smax;
input  [10:0] add_ln206;
output  [10:0] input_r_address0;
output   input_r_ce0;
input  [63:0] input_r_q0;
output  [10:0] input_r_address1;
output   input_r_ce1;
input  [63:0] input_r_q1;
input  [10:0] add_ln210;
input  [10:0] add_ln210_1;
output  [3:0] values2_1_address0;
output   values2_1_ce0;
input  [63:0] values2_1_q0;
output  [3:0] values2_1_address1;
output   values2_1_ce1;
output   values2_1_we1;
output  [63:0] values2_1_d1;
output  [3:0] values2_address0;
output   values2_ce0;
input  [63:0] values2_q0;
output  [3:0] values2_address1;
output   values2_ce1;
output   values2_we1;
output  [63:0] values2_d1;
input  [31:0] cols;
input  [0:0] cmp18_not;
input  [0:0] cmp30_1;
input  [0:0] cmp30;
input  [0:0] cmp79;

reg ap_idle;
reg values2Strm_0_write;
reg values2Strm_1_write;
reg[10:0] input_r_address0;
reg input_r_ce0;
reg input_r_ce1;
reg[3:0] values2_1_address0;
reg values2_1_ce0;
reg values2_1_ce1;
reg values2_1_we1;
reg[3:0] values2_address0;
reg values2_ce0;
reg[3:0] values2_address1;
reg values2_ce1;
reg values2_we1;
reg[63:0] values2_d1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln201_reg_456;
reg   [0:0] icmp_reg_486;
wire   [0:0] cmp79_read_reg_442;
reg    ap_predicate_op82_write_state2;
reg    ap_predicate_op85_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    values2Strm_0_blk_n;
wire    ap_block_pp0_stage1;
reg    values2Strm_1_blk_n;
reg   [63:0] reg_261;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] grp_fu_257_p2;
reg   [63:0] reg_266;
wire   [0:0] cmp79_read_read_fu_92_p2;
wire   [0:0] icmp_ln201_fu_278_p2;
reg   [0:0] icmp_ln201_reg_456_pp0_iter1_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter2_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter3_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter4_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter5_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter6_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter7_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter8_reg;
reg   [0:0] icmp_ln201_reg_456_pp0_iter9_reg;
wire   [30:0] add_ln201_fu_284_p2;
reg   [30:0] add_ln201_reg_460;
wire   [10:0] add_ln210_3_fu_322_p2;
reg   [10:0] add_ln210_3_reg_475;
wire   [0:0] or_ln205_fu_344_p2;
reg   [0:0] or_ln205_reg_480;
reg   [0:0] or_ln205_reg_480_pp0_iter1_reg;
reg   [0:0] or_ln205_reg_480_pp0_iter2_reg;
reg   [0:0] or_ln205_reg_480_pp0_iter3_reg;
reg   [0:0] or_ln205_reg_480_pp0_iter4_reg;
reg   [0:0] or_ln205_reg_480_pp0_iter5_reg;
wire   [0:0] icmp_fu_360_p2;
reg   [0:0] icmp_reg_486_pp0_iter1_reg;
reg   [0:0] icmp_reg_486_pp0_iter2_reg;
reg   [0:0] icmp_reg_486_pp0_iter3_reg;
reg   [0:0] icmp_reg_486_pp0_iter4_reg;
reg   [0:0] icmp_reg_486_pp0_iter5_reg;
reg   [0:0] icmp_reg_486_pp0_iter6_reg;
reg   [0:0] icmp_reg_486_pp0_iter7_reg;
reg   [0:0] icmp_reg_486_pp0_iter8_reg;
reg   [0:0] icmp_reg_486_pp0_iter9_reg;
reg   [3:0] values2_addr_reg_490;
reg   [3:0] values2_addr_reg_490_pp0_iter1_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter2_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter3_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter4_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter5_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter6_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter7_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter8_reg;
reg   [3:0] values2_addr_reg_490_pp0_iter9_reg;
reg   [3:0] values2_1_addr_reg_496;
reg   [3:0] values2_1_addr_reg_496_pp0_iter1_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter2_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter3_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter4_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter5_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter6_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter7_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter8_reg;
reg   [3:0] values2_1_addr_reg_496_pp0_iter9_reg;
reg   [63:0] input_r_load_1_reg_517;
reg   [63:0] values2_load_reg_522;
reg   [63:0] values2_load_reg_522_pp0_iter1_reg;
reg   [63:0] values2_load_reg_522_pp0_iter2_reg;
reg   [63:0] values2_load_reg_522_pp0_iter3_reg;
reg   [63:0] values2_load_reg_522_pp0_iter4_reg;
reg   [63:0] values2_1_load_reg_527;
reg   [63:0] values2_1_load_reg_527_pp0_iter1_reg;
reg   [63:0] values2_1_load_reg_527_pp0_iter2_reg;
reg   [63:0] values2_1_load_reg_527_pp0_iter3_reg;
reg   [63:0] values2_1_load_reg_527_pp0_iter4_reg;
wire   [63:0] matValue_fu_394_p1;
reg   [63:0] matValue_reg_532;
wire   [63:0] bitcast_ln210_fu_399_p1;
wire   [63:0] bitcast_ln210_1_fu_403_p1;
wire   [63:0] tmp_10_fu_412_p3;
wire   [63:0] tmp_2_fu_426_p3;
wire   [63:0] grp_fu_253_p2;
reg   [63:0] add_reg_558;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] ap_phi_reg_pp0_iter0_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter1_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter2_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter3_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter4_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter5_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter6_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter7_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter8_storemerge_reg_243;
reg   [63:0] ap_phi_reg_pp0_iter9_storemerge_reg_243;
wire   [63:0] zext_ln206_fu_306_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln210_fu_317_p1;
wire   [63:0] idxprom1001_fu_370_p1;
wire   [63:0] zext_ln201_fu_290_p1;
wire   [63:0] zext_ln210_1_fu_376_p1;
reg   [30:0] k_fu_88;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_k_1;
reg    ap_block_pp0_stage1_01001;
reg   [63:0] grp_fu_253_p0;
reg   [63:0] grp_fu_253_p1;
reg   [63:0] grp_fu_257_p0;
reg   [63:0] grp_fu_257_p1;
wire   [10:0] trunc_ln206_fu_296_p1;
wire   [10:0] add_ln206_1_fu_300_p2;
wire   [10:0] add_ln210_2_fu_311_p2;
wire   [31:0] zext_ln201_1_fu_328_p1;
wire   [0:0] icmp_ln205_fu_332_p2;
wire   [0:0] xor_ln205_fu_338_p2;
wire   [26:0] tmp_fu_350_p4;
wire   [3:0] empty_fu_366_p1;
wire   [0:0] or_ln205_1_fu_408_p2;
wire   [0:0] sel_tmp_fu_422_p2;
reg    grp_fu_253_ce;
reg    grp_fu_257_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to9;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_343;
reg    ap_condition_370;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 k_fu_88 = 31'd0;
#0 ap_done_reg = 1'b0;
end

dut_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_253_p0),
    .din1(grp_fu_253_p1),
    .ce(grp_fu_253_ce),
    .dout(grp_fu_253_p2)
);

dut_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_257_p0),
    .din1(grp_fu_257_p1),
    .ce(grp_fu_257_ce),
    .dout(grp_fu_257_p2)
);

dut_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_343)) begin
        if (((icmp_reg_486_pp0_iter5_reg == 1'd1) & (icmp_ln201_reg_456_pp0_iter5_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_storemerge_reg_243 <= tmp_2_fu_426_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_storemerge_reg_243 <= ap_phi_reg_pp0_iter5_storemerge_reg_243;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_reg_486_pp0_iter8_reg == 1'd0) & (icmp_ln201_reg_456_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter9_storemerge_reg_243 <= grp_fu_253_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_storemerge_reg_243 <= ap_phi_reg_pp0_iter8_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_88 <= 31'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln201_reg_456 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        k_fu_88 <= add_ln201_reg_460;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_261 <= input_r_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_261 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln201_reg_460 <= add_ln201_fu_284_p2;
        add_ln210_3_reg_475 <= add_ln210_3_fu_322_p2;
        icmp_ln201_reg_456 <= icmp_ln201_fu_278_p2;
        icmp_ln201_reg_456_pp0_iter1_reg <= icmp_ln201_reg_456;
        icmp_ln201_reg_456_pp0_iter2_reg <= icmp_ln201_reg_456_pp0_iter1_reg;
        icmp_ln201_reg_456_pp0_iter3_reg <= icmp_ln201_reg_456_pp0_iter2_reg;
        icmp_ln201_reg_456_pp0_iter4_reg <= icmp_ln201_reg_456_pp0_iter3_reg;
        icmp_ln201_reg_456_pp0_iter5_reg <= icmp_ln201_reg_456_pp0_iter4_reg;
        icmp_ln201_reg_456_pp0_iter6_reg <= icmp_ln201_reg_456_pp0_iter5_reg;
        icmp_ln201_reg_456_pp0_iter7_reg <= icmp_ln201_reg_456_pp0_iter6_reg;
        icmp_ln201_reg_456_pp0_iter8_reg <= icmp_ln201_reg_456_pp0_iter7_reg;
        icmp_ln201_reg_456_pp0_iter9_reg <= icmp_ln201_reg_456_pp0_iter8_reg;
        icmp_reg_486 <= icmp_fu_360_p2;
        icmp_reg_486_pp0_iter1_reg <= icmp_reg_486;
        icmp_reg_486_pp0_iter2_reg <= icmp_reg_486_pp0_iter1_reg;
        icmp_reg_486_pp0_iter3_reg <= icmp_reg_486_pp0_iter2_reg;
        icmp_reg_486_pp0_iter4_reg <= icmp_reg_486_pp0_iter3_reg;
        icmp_reg_486_pp0_iter5_reg <= icmp_reg_486_pp0_iter4_reg;
        icmp_reg_486_pp0_iter6_reg <= icmp_reg_486_pp0_iter5_reg;
        icmp_reg_486_pp0_iter7_reg <= icmp_reg_486_pp0_iter6_reg;
        icmp_reg_486_pp0_iter8_reg <= icmp_reg_486_pp0_iter7_reg;
        icmp_reg_486_pp0_iter9_reg <= icmp_reg_486_pp0_iter8_reg;
        matValue_reg_532 <= matValue_fu_394_p1;
        or_ln205_reg_480 <= or_ln205_fu_344_p2;
        or_ln205_reg_480_pp0_iter1_reg <= or_ln205_reg_480;
        or_ln205_reg_480_pp0_iter2_reg <= or_ln205_reg_480_pp0_iter1_reg;
        or_ln205_reg_480_pp0_iter3_reg <= or_ln205_reg_480_pp0_iter2_reg;
        or_ln205_reg_480_pp0_iter4_reg <= or_ln205_reg_480_pp0_iter3_reg;
        or_ln205_reg_480_pp0_iter5_reg <= or_ln205_reg_480_pp0_iter4_reg;
        values2_1_addr_reg_496 <= idxprom1001_fu_370_p1;
        values2_1_addr_reg_496_pp0_iter1_reg <= values2_1_addr_reg_496;
        values2_1_addr_reg_496_pp0_iter2_reg <= values2_1_addr_reg_496_pp0_iter1_reg;
        values2_1_addr_reg_496_pp0_iter3_reg <= values2_1_addr_reg_496_pp0_iter2_reg;
        values2_1_addr_reg_496_pp0_iter4_reg <= values2_1_addr_reg_496_pp0_iter3_reg;
        values2_1_addr_reg_496_pp0_iter5_reg <= values2_1_addr_reg_496_pp0_iter4_reg;
        values2_1_addr_reg_496_pp0_iter6_reg <= values2_1_addr_reg_496_pp0_iter5_reg;
        values2_1_addr_reg_496_pp0_iter7_reg <= values2_1_addr_reg_496_pp0_iter6_reg;
        values2_1_addr_reg_496_pp0_iter8_reg <= values2_1_addr_reg_496_pp0_iter7_reg;
        values2_1_addr_reg_496_pp0_iter9_reg <= values2_1_addr_reg_496_pp0_iter8_reg;
        values2_addr_reg_490 <= idxprom1001_fu_370_p1;
        values2_addr_reg_490_pp0_iter1_reg <= values2_addr_reg_490;
        values2_addr_reg_490_pp0_iter2_reg <= values2_addr_reg_490_pp0_iter1_reg;
        values2_addr_reg_490_pp0_iter3_reg <= values2_addr_reg_490_pp0_iter2_reg;
        values2_addr_reg_490_pp0_iter4_reg <= values2_addr_reg_490_pp0_iter3_reg;
        values2_addr_reg_490_pp0_iter5_reg <= values2_addr_reg_490_pp0_iter4_reg;
        values2_addr_reg_490_pp0_iter6_reg <= values2_addr_reg_490_pp0_iter5_reg;
        values2_addr_reg_490_pp0_iter7_reg <= values2_addr_reg_490_pp0_iter6_reg;
        values2_addr_reg_490_pp0_iter8_reg <= values2_addr_reg_490_pp0_iter7_reg;
        values2_addr_reg_490_pp0_iter9_reg <= values2_addr_reg_490_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_reg_558 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        values2_1_load_reg_527_pp0_iter1_reg <= values2_1_load_reg_527;
        values2_1_load_reg_527_pp0_iter2_reg <= values2_1_load_reg_527_pp0_iter1_reg;
        values2_1_load_reg_527_pp0_iter3_reg <= values2_1_load_reg_527_pp0_iter2_reg;
        values2_1_load_reg_527_pp0_iter4_reg <= values2_1_load_reg_527_pp0_iter3_reg;
        values2_load_reg_522_pp0_iter1_reg <= values2_load_reg_522;
        values2_load_reg_522_pp0_iter2_reg <= values2_load_reg_522_pp0_iter1_reg;
        values2_load_reg_522_pp0_iter3_reg <= values2_load_reg_522_pp0_iter2_reg;
        values2_load_reg_522_pp0_iter4_reg <= values2_load_reg_522_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_243 <= ap_phi_reg_pp0_iter0_storemerge_reg_243;
        input_r_load_1_reg_517 <= input_r_q0;
        values2_1_load_reg_527 <= values2_1_q0;
        values2_load_reg_522 <= values2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_storemerge_reg_243 <= ap_phi_reg_pp0_iter1_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_storemerge_reg_243 <= ap_phi_reg_pp0_iter2_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_243 <= ap_phi_reg_pp0_iter3_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_storemerge_reg_243 <= ap_phi_reg_pp0_iter4_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_storemerge_reg_243 <= ap_phi_reg_pp0_iter6_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_storemerge_reg_243 <= ap_phi_reg_pp0_iter7_storemerge_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_266 <= grp_fu_257_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln201_reg_456 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_1 = 31'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_88;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_253_ce = 1'b1;
    end else begin
        grp_fu_253_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_253_p0 = values2_1_load_reg_527_pp0_iter4_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_253_p0 = values2_load_reg_522_pp0_iter4_reg;
        end else begin
            grp_fu_253_p0 = 'bx;
        end
    end else begin
        grp_fu_253_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_253_p1 = tmp_2_fu_426_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_253_p1 = tmp_10_fu_412_p3;
        end else begin
            grp_fu_253_p1 = 'bx;
        end
    end else begin
        grp_fu_253_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_257_ce = 1'b1;
    end else begin
        grp_fu_257_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_257_p0 = matValue_reg_532;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_257_p0 = matValue_fu_394_p1;
        end else begin
            grp_fu_257_p0 = 'bx;
        end
    end else begin
        grp_fu_257_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_257_p1 = bitcast_ln210_1_fu_403_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_257_p1 = bitcast_ln210_fu_399_p1;
        end else begin
            grp_fu_257_p1 = 'bx;
        end
    end else begin
        grp_fu_257_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln210_1_fu_376_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln210_fu_317_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op82_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2Strm_0_blk_n = values2Strm_0_full_n;
    end else begin
        values2Strm_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op82_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2Strm_0_write = 1'b1;
    end else begin
        values2Strm_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op85_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2Strm_1_blk_n = values2Strm_1_full_n;
    end else begin
        values2Strm_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op85_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2Strm_1_write = 1'b1;
    end else begin
        values2Strm_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_370)) begin
        if (((icmp_fu_360_p2 == 1'd1) & (cmp79_read_read_fu_92_p2 == 1'd0))) begin
            values2_1_address0 = zext_ln201_fu_290_p1;
        end else if ((icmp_fu_360_p2 == 1'd0)) begin
            values2_1_address0 = idxprom1001_fu_370_p1;
        end else begin
            values2_1_address0 = 'bx;
        end
    end else begin
        values2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_fu_360_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_278_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_278_p2 == 1'd0) & (cmp79_read_read_fu_92_p2 == 1'd0)))) begin
        values2_1_ce0 = 1'b1;
    end else begin
        values2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2_1_ce1 = 1'b1;
    end else begin
        values2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2_1_we1 = 1'b1;
    end else begin
        values2_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_370)) begin
        if (((icmp_fu_360_p2 == 1'd1) & (cmp79_read_read_fu_92_p2 == 1'd0))) begin
            values2_address0 = zext_ln201_fu_290_p1;
        end else if ((icmp_fu_360_p2 == 1'd0)) begin
            values2_address0 = idxprom1001_fu_370_p1;
        end else begin
            values2_address0 = 'bx;
        end
    end else begin
        values2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2_address1 = values2_addr_reg_490_pp0_iter9_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (cmp79 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (cmp79_read_reg_442 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        values2_address1 = values2_addr_reg_490_pp0_iter4_reg;
    end else begin
        values2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_fu_360_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_278_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_278_p2 == 1'd0) & (cmp79_read_read_fu_92_p2 == 1'd0)))) begin
        values2_ce0 = 1'b1;
    end else begin
        values2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp79 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp79_read_reg_442 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2_ce1 = 1'b1;
    end else begin
        values2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        values2_d1 = add_reg_558;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (cmp79 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (cmp79_read_reg_442 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        values2_d1 = tmp_10_fu_412_p3;
    end else begin
        values2_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp79 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp79_read_reg_442 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_reg_486_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_reg_486_pp0_iter9_reg == 1'd0) & (icmp_ln201_reg_456_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2_we1 = 1'b1;
    end else begin
        values2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln201_fu_284_p2 = (ap_sig_allocacmp_k_1 + 31'd1);

assign add_ln206_1_fu_300_p2 = (add_ln206 + trunc_ln206_fu_296_p1);

assign add_ln210_2_fu_311_p2 = (add_ln210 + trunc_ln206_fu_296_p1);

assign add_ln210_3_fu_322_p2 = (add_ln210_1 + trunc_ln206_fu_296_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((ap_predicate_op85_write_state2 == 1'b1) & (values2Strm_1_full_n == 1'b0)) | ((ap_predicate_op82_write_state2 == 1'b1) & (values2Strm_0_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_343 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_370 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_278_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_storemerge_reg_243 = 'bx;

always @ (*) begin
    ap_predicate_op82_write_state2 = ((cmp79 == 1'd0) & (icmp_reg_486 == 1'd1) & (icmp_ln201_reg_456 == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_write_state2 = ((cmp79 == 1'd0) & (icmp_reg_486 == 1'd1) & (icmp_ln201_reg_456 == 1'd0));
end

assign bitcast_ln210_1_fu_403_p1 = reg_261;

assign bitcast_ln210_fu_399_p1 = input_r_load_1_reg_517;

assign cmp79_read_read_fu_92_p2 = cmp79;

assign cmp79_read_reg_442 = cmp79;

assign empty_fu_366_p1 = ap_sig_allocacmp_k_1[3:0];

assign icmp_fu_360_p2 = ((tmp_fu_350_p4 == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_278_p2 = ((ap_sig_allocacmp_k_1 == smax) ? 1'b1 : 1'b0);

assign icmp_ln205_fu_332_p2 = (($signed(zext_ln201_1_fu_328_p1) < $signed(cols)) ? 1'b1 : 1'b0);

assign idxprom1001_fu_370_p1 = empty_fu_366_p1;

assign input_r_address1 = zext_ln206_fu_306_p1;

assign matValue_fu_394_p1 = reg_261;

assign or_ln205_1_fu_408_p2 = (or_ln205_reg_480_pp0_iter4_reg | cmp30);

assign or_ln205_fu_344_p2 = (xor_ln205_fu_338_p2 | cmp18_not);

assign sel_tmp_fu_422_p2 = (or_ln205_reg_480_pp0_iter5_reg | cmp30_1);

assign tmp_10_fu_412_p3 = ((or_ln205_1_fu_408_p2[0:0] == 1'b1) ? 64'd0 : reg_266);

assign tmp_2_fu_426_p3 = ((sel_tmp_fu_422_p2[0:0] == 1'b1) ? 64'd0 : reg_266);

assign tmp_fu_350_p4 = {{ap_sig_allocacmp_k_1[30:4]}};

assign trunc_ln206_fu_296_p1 = ap_sig_allocacmp_k_1[10:0];

assign values2Strm_0_din = values2_q0;

assign values2Strm_1_din = values2_1_q0;

assign values2_1_address1 = values2_1_addr_reg_496_pp0_iter9_reg;

assign values2_1_d1 = ap_phi_reg_pp0_iter9_storemerge_reg_243;

assign xor_ln205_fu_338_p2 = (icmp_ln205_fu_332_p2 ^ 1'd1);

assign zext_ln201_1_fu_328_p1 = ap_sig_allocacmp_k_1;

assign zext_ln201_fu_290_p1 = ap_sig_allocacmp_k_1;

assign zext_ln206_fu_306_p1 = add_ln206_1_fu_300_p2;

assign zext_ln210_1_fu_376_p1 = add_ln210_3_reg_475;

assign zext_ln210_fu_317_p1 = add_ln210_2_fu_311_p2;

endmodule //dut_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2
