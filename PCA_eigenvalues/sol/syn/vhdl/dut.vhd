-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_we0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_we1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    outputComponents_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputComponents_0_ce0 : OUT STD_LOGIC;
    outputComponents_0_we0 : OUT STD_LOGIC;
    outputComponents_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputComponents_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputComponents_1_ce0 : OUT STD_LOGIC;
    outputComponents_1_we0 : OUT STD_LOGIC;
    outputComponents_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputComponents_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputComponents_2_ce0 : OUT STD_LOGIC;
    outputComponents_2_we0 : OUT STD_LOGIC;
    outputComponents_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputExplainedVariance_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputExplainedVariance_0_ap_vld : OUT STD_LOGIC;
    outputExplainedVariance_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputExplainedVariance_1_ap_vld : OUT STD_LOGIC;
    outputExplainedVariance_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputExplainedVariance_2_ap_vld : OUT STD_LOGIC;
    outputLoadings_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputLoadings_0_ce0 : OUT STD_LOGIC;
    outputLoadings_0_we0 : OUT STD_LOGIC;
    outputLoadings_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputLoadings_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputLoadings_1_ce0 : OUT STD_LOGIC;
    outputLoadings_1_we0 : OUT STD_LOGIC;
    outputLoadings_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    outputLoadings_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outputLoadings_2_ce0 : OUT STD_LOGIC;
    outputLoadings_2_we0 : OUT STD_LOGIC;
    outputLoadings_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut_dut,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.237000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=64839,HLS_SYN_LUT=35181,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (45 downto 0) := "0000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (45 downto 0) := "0000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (45 downto 0) := "0000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (45 downto 0) := "0000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (45 downto 0) := "0000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (45 downto 0) := "0000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (45 downto 0) := "0001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (45 downto 0) := "0010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (45 downto 0) := "0100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (45 downto 0) := "1000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln31_fu_289_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln31_reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln31_fu_293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln31_reg_365 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal pca_m_pcVals_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVals_1_load_reg_375 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal pca_m_pcVals_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVals_1_load_1_reg_390 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal pca_m_pcVals_1_load_2_reg_395 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln277_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sqrtVals_reg_404 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_273_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sqrtVals_1_reg_409 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sqrtVals_2_reg_414 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln350_fu_313_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln350_reg_419 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal standarisedData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal standarisedData_ce0 : STD_LOGIC;
    signal standarisedData_we0 : STD_LOGIC;
    signal standarisedData_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal covMatrix_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal covMatrix_ce0 : STD_LOGIC;
    signal covMatrix_we0 : STD_LOGIC;
    signal covMatrix_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVals_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal pca_m_pcVals_0_ce0 : STD_LOGIC;
    signal pca_m_pcVals_0_we0 : STD_LOGIC;
    signal pca_m_pcVals_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVals_0_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal pca_m_pcVals_0_ce1 : STD_LOGIC;
    signal pca_m_pcVals_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVals_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal pca_m_pcVals_1_ce0 : STD_LOGIC;
    signal pca_m_pcVals_1_we0 : STD_LOGIC;
    signal pca_m_pcVals_1_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal pca_m_pcVals_1_ce1 : STD_LOGIC;
    signal pca_m_pcVecs_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pca_m_pcVecs_ce0 : STD_LOGIC;
    signal pca_m_pcVecs_we0 : STD_LOGIC;
    signal pca_m_pcVecs_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVecs_ce1 : STD_LOGIC;
    signal pca_m_pcVecs_we1 : STD_LOGIC;
    signal pca_m_pcVecs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pca_m_pcVecs_3_ce0 : STD_LOGIC;
    signal pca_m_pcVecs_3_we0 : STD_LOGIC;
    signal pca_m_pcVecs_3_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVecs_3_ce1 : STD_LOGIC;
    signal pca_m_pcVecs_3_we1 : STD_LOGIC;
    signal pca_m_pcVecs_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pca_m_pcVecs_4_ce0 : STD_LOGIC;
    signal pca_m_pcVecs_4_we0 : STD_LOGIC;
    signal pca_m_pcVecs_4_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal pca_m_pcVecs_4_ce1 : STD_LOGIC;
    signal pca_m_pcVecs_4_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_idle : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_ready : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we0 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we1 : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_ce : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce0 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_we0 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce1 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_we1 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce0 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we0 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce1 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we1 : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_idle : STD_LOGIC;
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_continue : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_idle : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_ready : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_ap_start : STD_LOGIC;
    signal grp_implement_fu_225_ap_done : STD_LOGIC;
    signal grp_implement_fu_225_ap_idle : STD_LOGIC;
    signal grp_implement_fu_225_ap_ready : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVals_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_implement_fu_225_this_m_pcVals_0_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVals_0_we0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVals_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVals_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_implement_fu_225_this_m_pcVals_1_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVals_1_we0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVals_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_0_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_0_we0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_0_ce1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_0_we1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_0_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_1_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_1_we0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_1_ce1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_1_we1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_2_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_2_we0 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_implement_fu_225_this_m_pcVecs_2_ce1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_2_we1 : STD_LOGIC;
    signal grp_implement_fu_225_this_m_pcVecs_2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_standarisedData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_implement_fu_225_standarisedData_ce0 : STD_LOGIC;
    signal grp_implement_fu_225_grp_fu_439_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_grp_fu_439_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_grp_fu_439_p_ce : STD_LOGIC;
    signal grp_implement_fu_225_grp_fu_443_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_grp_fu_443_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_implement_fu_225_grp_fu_443_p_ce : STD_LOGIC;
    signal grp_implement_fu_225_grp_fu_447_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_implement_fu_225_grp_fu_447_p_din1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_implement_fu_225_grp_fu_447_p_ce : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_idle : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_ready : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_ce : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_ce : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_done : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_idle : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_ready : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_we0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_ce0 : STD_LOGIC;
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_ce : STD_LOGIC;
    signal grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready : STD_LOGIC;
    signal ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done : STD_LOGIC := '0';
    signal grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_implement_fu_225_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_block_state44_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_fu_285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl3_fu_306_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln350_fu_303_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_285_ce : STD_LOGIC;
    signal grp_fu_439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_439_ce : STD_LOGIC;
    signal grp_fu_443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_443_ce : STD_LOGIC;
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal grp_fu_447_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_447_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_447_ce : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_aveImpl_double_15_80_1_2_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_we0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_we1 : OUT STD_LOGIC;
        input_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_ce : OUT STD_LOGIC;
        grp_fu_443_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_ce : OUT STD_LOGIC );
    end component;


    component dut_covCoreWrapper_double_15_80_1_2_16_s IS
    port (
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_we0 : OUT STD_LOGIC;
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_we1 : OUT STD_LOGIC;
        outCovMatrix_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        outCovMatrix_ce0 : OUT STD_LOGIC;
        outCovMatrix_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outCovMatrix_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        outCovMatrix_we0 : OUT STD_LOGIC;
        outCovMatrix_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        outCovMatrix_ce1 : OUT STD_LOGIC;
        outCovMatrix_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outCovMatrix_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        outCovMatrix_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        rows_ap_vld : IN STD_LOGIC;
        cols_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component dut_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln31 : IN STD_LOGIC_VECTOR (63 downto 0);
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (7 downto 0);
        covMatrix_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        covMatrix_ce0 : OUT STD_LOGIC;
        covMatrix_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        standarisedData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        standarisedData_ce0 : OUT STD_LOGIC;
        standarisedData_we0 : OUT STD_LOGIC;
        standarisedData_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_implement IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_m_pcVals_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        this_m_pcVals_0_ce0 : OUT STD_LOGIC;
        this_m_pcVals_0_we0 : OUT STD_LOGIC;
        this_m_pcVals_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVals_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        this_m_pcVals_1_ce0 : OUT STD_LOGIC;
        this_m_pcVals_1_we0 : OUT STD_LOGIC;
        this_m_pcVals_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_0_ce0 : OUT STD_LOGIC;
        this_m_pcVecs_0_we0 : OUT STD_LOGIC;
        this_m_pcVecs_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_0_ce1 : OUT STD_LOGIC;
        this_m_pcVecs_0_we1 : OUT STD_LOGIC;
        this_m_pcVecs_0_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_1_ce0 : OUT STD_LOGIC;
        this_m_pcVecs_1_we0 : OUT STD_LOGIC;
        this_m_pcVecs_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_1_ce1 : OUT STD_LOGIC;
        this_m_pcVecs_1_we1 : OUT STD_LOGIC;
        this_m_pcVecs_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_2_ce0 : OUT STD_LOGIC;
        this_m_pcVecs_2_we0 : OUT STD_LOGIC;
        this_m_pcVecs_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_m_pcVecs_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_m_pcVecs_2_ce1 : OUT STD_LOGIC;
        this_m_pcVecs_2_we1 : OUT STD_LOGIC;
        this_m_pcVecs_2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        noVars : IN STD_LOGIC_VECTOR (31 downto 0);
        standarisedData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        standarisedData_ce0 : OUT STD_LOGIC;
        standarisedData_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_ce : OUT STD_LOGIC;
        grp_fu_443_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_443_p_ce : OUT STD_LOGIC;
        grp_fu_447_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_447_p_din1 : OUT STD_LOGIC_VECTOR (33 downto 0);
        grp_fu_447_p_dout0 : IN STD_LOGIC_VECTOR (64 downto 0);
        grp_fu_447_p_ce : OUT STD_LOGIC );
    end component;


    component dut_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln350 : IN STD_LOGIC_VECTOR (33 downto 0);
        outputLoadings_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputLoadings_2_ce0 : OUT STD_LOGIC;
        outputLoadings_2_we0 : OUT STD_LOGIC;
        outputLoadings_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outputLoadings_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputLoadings_0_ce0 : OUT STD_LOGIC;
        outputLoadings_0_we0 : OUT STD_LOGIC;
        outputLoadings_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outputLoadings_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputLoadings_1_ce0 : OUT STD_LOGIC;
        outputLoadings_1_we0 : OUT STD_LOGIC;
        outputLoadings_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sqrtVals : IN STD_LOGIC_VECTOR (63 downto 0);
        sqrtVals_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        sqrtVals_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_3_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_4_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_439_p_ce : OUT STD_LOGIC;
        grp_fu_447_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_447_p_din1 : OUT STD_LOGIC_VECTOR (33 downto 0);
        grp_fu_447_p_dout0 : IN STD_LOGIC_VECTOR (64 downto 0);
        grp_fu_447_p_ce : OUT STD_LOGIC );
    end component;


    component dut_dut_Pipeline_VITIS_LOOP_321_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        outputComponents_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputComponents_2_ce0 : OUT STD_LOGIC;
        outputComponents_2_we0 : OUT STD_LOGIC;
        outputComponents_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outputComponents_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputComponents_1_ce0 : OUT STD_LOGIC;
        outputComponents_1_we0 : OUT STD_LOGIC;
        outputComponents_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        outputComponents_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        outputComponents_0_ce0 : OUT STD_LOGIC;
        outputComponents_0_we0 : OUT STD_LOGIC;
        outputComponents_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_3_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        pca_m_pcVecs_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        pca_m_pcVecs_4_ce0 : OUT STD_LOGIC;
        pca_m_pcVecs_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_447_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_447_p_din1 : OUT STD_LOGIC_VECTOR (33 downto 0);
        grp_fu_447_p_dout0 : IN STD_LOGIC_VECTOR (64 downto 0);
        grp_fu_447_p_ce : OUT STD_LOGIC );
    end component;


    component dut_dsqrt_64ns_64ns_64_30_no_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_dmul_64ns_64ns_64_8_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_mul_32ns_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component dut_standarisedData_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_pca_m_pcVals_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dut_pca_m_pcVecs_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    standarisedData_U : component dut_standarisedData_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => standarisedData_address0,
        ce0 => standarisedData_ce0,
        we0 => standarisedData_we0,
        d0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_d0,
        q0 => standarisedData_q0);

    covMatrix_U : component dut_standarisedData_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => covMatrix_address0,
        ce0 => covMatrix_ce0,
        we0 => covMatrix_we0,
        d0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_d0,
        q0 => covMatrix_q0);

    pca_m_pcVals_0_U : component dut_pca_m_pcVals_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pca_m_pcVals_0_address0,
        ce0 => pca_m_pcVals_0_ce0,
        we0 => pca_m_pcVals_0_we0,
        d0 => grp_implement_fu_225_this_m_pcVals_0_d0,
        q0 => pca_m_pcVals_0_q0,
        address1 => pca_m_pcVals_0_address1,
        ce1 => pca_m_pcVals_0_ce1,
        q1 => pca_m_pcVals_0_q1);

    pca_m_pcVals_1_U : component dut_pca_m_pcVals_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pca_m_pcVals_1_address0,
        ce0 => pca_m_pcVals_1_ce0,
        we0 => pca_m_pcVals_1_we0,
        d0 => grp_implement_fu_225_this_m_pcVals_1_d0,
        q0 => pca_m_pcVals_1_q0,
        address1 => pca_m_pcVals_1_address1,
        ce1 => pca_m_pcVals_1_ce1,
        q1 => pca_m_pcVals_1_q1);

    pca_m_pcVecs_U : component dut_pca_m_pcVecs_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pca_m_pcVecs_address0,
        ce0 => pca_m_pcVecs_ce0,
        we0 => pca_m_pcVecs_we0,
        d0 => grp_implement_fu_225_this_m_pcVecs_0_d0,
        q0 => pca_m_pcVecs_q0,
        address1 => grp_implement_fu_225_this_m_pcVecs_0_address1,
        ce1 => pca_m_pcVecs_ce1,
        we1 => pca_m_pcVecs_we1,
        d1 => grp_implement_fu_225_this_m_pcVecs_0_d1);

    pca_m_pcVecs_3_U : component dut_pca_m_pcVecs_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pca_m_pcVecs_3_address0,
        ce0 => pca_m_pcVecs_3_ce0,
        we0 => pca_m_pcVecs_3_we0,
        d0 => grp_implement_fu_225_this_m_pcVecs_1_d0,
        q0 => pca_m_pcVecs_3_q0,
        address1 => grp_implement_fu_225_this_m_pcVecs_1_address1,
        ce1 => pca_m_pcVecs_3_ce1,
        we1 => pca_m_pcVecs_3_we1,
        d1 => grp_implement_fu_225_this_m_pcVecs_1_d1);

    pca_m_pcVecs_4_U : component dut_pca_m_pcVecs_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pca_m_pcVecs_4_address0,
        ce0 => pca_m_pcVecs_4_ce0,
        we0 => pca_m_pcVecs_4_we0,
        d0 => grp_implement_fu_225_this_m_pcVecs_2_d0,
        q0 => pca_m_pcVecs_4_q0,
        address1 => grp_implement_fu_225_this_m_pcVecs_2_address1,
        ce1 => pca_m_pcVecs_4_ce1,
        we1 => pca_m_pcVecs_4_we1,
        d1 => grp_implement_fu_225_this_m_pcVecs_2_d1);

    grp_aveImpl_double_15_80_1_2_16_s_fu_197 : component dut_aveImpl_double_15_80_1_2_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start,
        ap_done => grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done,
        ap_idle => grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_idle,
        ap_ready => grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_ready,
        rows => rows,
        cols => cols,
        input_r_address0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address0,
        input_r_ce0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce0,
        input_r_we0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we0,
        input_r_d0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address1,
        input_r_ce1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce1,
        input_r_we1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we1,
        input_r_d1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d1,
        input_r_q1 => input_r_q1,
        grp_fu_439_p_din0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din0,
        grp_fu_439_p_din1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din1,
        grp_fu_439_p_dout0 => grp_fu_439_p2,
        grp_fu_439_p_ce => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_ce,
        grp_fu_443_p_din0 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din0,
        grp_fu_443_p_din1 => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din1,
        grp_fu_443_p_dout0 => grp_fu_443_p2,
        grp_fu_443_p_ce => grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_ce);

    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207 : component dut_covCoreWrapper_double_15_80_1_2_16_s
    port map (
        rows => rows,
        cols => cols,
        input_r_address0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address0,
        input_r_ce0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce0,
        input_r_d0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_d0,
        input_r_q0 => input_r_q0,
        input_r_we0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_we0,
        input_r_address1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address1,
        input_r_ce1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce1,
        input_r_d1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_d1,
        input_r_q1 => input_r_q1,
        input_r_we1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_we1,
        outCovMatrix_address0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address0,
        outCovMatrix_ce0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce0,
        outCovMatrix_d0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_d0,
        outCovMatrix_q0 => ap_const_lv64_0,
        outCovMatrix_we0 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we0,
        outCovMatrix_address1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address1,
        outCovMatrix_ce1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce1,
        outCovMatrix_d1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_d1,
        outCovMatrix_q1 => ap_const_lv64_0,
        outCovMatrix_we1 => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        rows_ap_vld => ap_const_logic_1,
        cols_ap_vld => ap_const_logic_1,
        ap_start => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start,
        ap_done => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done,
        ap_ready => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready,
        ap_idle => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_idle,
        ap_continue => grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_continue);

    grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216 : component dut_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start,
        ap_done => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done,
        ap_idle => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_idle,
        ap_ready => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_ready,
        mul_ln31 => mul_ln31_reg_365,
        rows => rows,
        empty => trunc_ln31_reg_354,
        covMatrix_address0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_address0,
        covMatrix_ce0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_ce0,
        covMatrix_q0 => covMatrix_q0,
        standarisedData_address0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_address0,
        standarisedData_ce0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_ce0,
        standarisedData_we0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_we0,
        standarisedData_d0 => grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_d0);

    grp_implement_fu_225 : component dut_implement
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_implement_fu_225_ap_start,
        ap_done => grp_implement_fu_225_ap_done,
        ap_idle => grp_implement_fu_225_ap_idle,
        ap_ready => grp_implement_fu_225_ap_ready,
        this_m_pcVals_0_address0 => grp_implement_fu_225_this_m_pcVals_0_address0,
        this_m_pcVals_0_ce0 => grp_implement_fu_225_this_m_pcVals_0_ce0,
        this_m_pcVals_0_we0 => grp_implement_fu_225_this_m_pcVals_0_we0,
        this_m_pcVals_0_d0 => grp_implement_fu_225_this_m_pcVals_0_d0,
        this_m_pcVals_1_address0 => grp_implement_fu_225_this_m_pcVals_1_address0,
        this_m_pcVals_1_ce0 => grp_implement_fu_225_this_m_pcVals_1_ce0,
        this_m_pcVals_1_we0 => grp_implement_fu_225_this_m_pcVals_1_we0,
        this_m_pcVals_1_d0 => grp_implement_fu_225_this_m_pcVals_1_d0,
        this_m_pcVecs_0_address0 => grp_implement_fu_225_this_m_pcVecs_0_address0,
        this_m_pcVecs_0_ce0 => grp_implement_fu_225_this_m_pcVecs_0_ce0,
        this_m_pcVecs_0_we0 => grp_implement_fu_225_this_m_pcVecs_0_we0,
        this_m_pcVecs_0_d0 => grp_implement_fu_225_this_m_pcVecs_0_d0,
        this_m_pcVecs_0_address1 => grp_implement_fu_225_this_m_pcVecs_0_address1,
        this_m_pcVecs_0_ce1 => grp_implement_fu_225_this_m_pcVecs_0_ce1,
        this_m_pcVecs_0_we1 => grp_implement_fu_225_this_m_pcVecs_0_we1,
        this_m_pcVecs_0_d1 => grp_implement_fu_225_this_m_pcVecs_0_d1,
        this_m_pcVecs_1_address0 => grp_implement_fu_225_this_m_pcVecs_1_address0,
        this_m_pcVecs_1_ce0 => grp_implement_fu_225_this_m_pcVecs_1_ce0,
        this_m_pcVecs_1_we0 => grp_implement_fu_225_this_m_pcVecs_1_we0,
        this_m_pcVecs_1_d0 => grp_implement_fu_225_this_m_pcVecs_1_d0,
        this_m_pcVecs_1_address1 => grp_implement_fu_225_this_m_pcVecs_1_address1,
        this_m_pcVecs_1_ce1 => grp_implement_fu_225_this_m_pcVecs_1_ce1,
        this_m_pcVecs_1_we1 => grp_implement_fu_225_this_m_pcVecs_1_we1,
        this_m_pcVecs_1_d1 => grp_implement_fu_225_this_m_pcVecs_1_d1,
        this_m_pcVecs_2_address0 => grp_implement_fu_225_this_m_pcVecs_2_address0,
        this_m_pcVecs_2_ce0 => grp_implement_fu_225_this_m_pcVecs_2_ce0,
        this_m_pcVecs_2_we0 => grp_implement_fu_225_this_m_pcVecs_2_we0,
        this_m_pcVecs_2_d0 => grp_implement_fu_225_this_m_pcVecs_2_d0,
        this_m_pcVecs_2_address1 => grp_implement_fu_225_this_m_pcVecs_2_address1,
        this_m_pcVecs_2_ce1 => grp_implement_fu_225_this_m_pcVecs_2_ce1,
        this_m_pcVecs_2_we1 => grp_implement_fu_225_this_m_pcVecs_2_we1,
        this_m_pcVecs_2_d1 => grp_implement_fu_225_this_m_pcVecs_2_d1,
        noVars => rows,
        standarisedData_address0 => grp_implement_fu_225_standarisedData_address0,
        standarisedData_ce0 => grp_implement_fu_225_standarisedData_ce0,
        standarisedData_q0 => standarisedData_q0,
        grp_fu_439_p_din0 => grp_implement_fu_225_grp_fu_439_p_din0,
        grp_fu_439_p_din1 => grp_implement_fu_225_grp_fu_439_p_din1,
        grp_fu_439_p_dout0 => grp_fu_439_p2,
        grp_fu_439_p_ce => grp_implement_fu_225_grp_fu_439_p_ce,
        grp_fu_443_p_din0 => grp_implement_fu_225_grp_fu_443_p_din0,
        grp_fu_443_p_din1 => grp_implement_fu_225_grp_fu_443_p_din1,
        grp_fu_443_p_dout0 => grp_fu_443_p2,
        grp_fu_443_p_ce => grp_implement_fu_225_grp_fu_443_p_ce,
        grp_fu_447_p_din0 => grp_implement_fu_225_grp_fu_447_p_din0,
        grp_fu_447_p_din1 => grp_implement_fu_225_grp_fu_447_p_din1,
        grp_fu_447_p_dout0 => grp_fu_447_p2,
        grp_fu_447_p_ce => grp_implement_fu_225_grp_fu_447_p_ce);

    grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236 : component dut_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start,
        ap_done => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done,
        ap_idle => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_idle,
        ap_ready => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_ready,
        sub_ln350 => sub_ln350_reg_419,
        outputLoadings_2_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_address0,
        outputLoadings_2_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_ce0,
        outputLoadings_2_we0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_we0,
        outputLoadings_2_d0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_d0,
        outputLoadings_0_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_address0,
        outputLoadings_0_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_ce0,
        outputLoadings_0_we0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_we0,
        outputLoadings_0_d0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_d0,
        outputLoadings_1_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_address0,
        outputLoadings_1_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_ce0,
        outputLoadings_1_we0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_we0,
        outputLoadings_1_d0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_d0,
        sqrtVals => sqrtVals_reg_404,
        sqrtVals_1 => sqrtVals_1_reg_409,
        sqrtVals_2 => sqrtVals_2_reg_414,
        pca_m_pcVecs_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_address0,
        pca_m_pcVecs_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_ce0,
        pca_m_pcVecs_q0 => pca_m_pcVecs_q0,
        pca_m_pcVecs_3_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_address0,
        pca_m_pcVecs_3_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_ce0,
        pca_m_pcVecs_3_q0 => pca_m_pcVecs_3_q0,
        pca_m_pcVecs_4_address0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_address0,
        pca_m_pcVecs_4_ce0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_ce0,
        pca_m_pcVecs_4_q0 => pca_m_pcVecs_4_q0,
        grp_fu_439_p_din0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din0,
        grp_fu_439_p_din1 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din1,
        grp_fu_439_p_dout0 => grp_fu_439_p2,
        grp_fu_439_p_ce => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_ce,
        grp_fu_447_p_din0 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din0,
        grp_fu_447_p_din1 => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din1,
        grp_fu_447_p_dout0 => grp_fu_447_p2,
        grp_fu_447_p_ce => grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_ce);

    grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253 : component dut_dut_Pipeline_VITIS_LOOP_321_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start,
        ap_done => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_done,
        ap_idle => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_idle,
        ap_ready => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_ready,
        rows => rows,
        outputComponents_2_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_address0,
        outputComponents_2_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_ce0,
        outputComponents_2_we0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_we0,
        outputComponents_2_d0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_d0,
        outputComponents_1_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_address0,
        outputComponents_1_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_ce0,
        outputComponents_1_we0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_we0,
        outputComponents_1_d0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_d0,
        outputComponents_0_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_address0,
        outputComponents_0_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_ce0,
        outputComponents_0_we0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_we0,
        outputComponents_0_d0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_d0,
        pca_m_pcVecs_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_address0,
        pca_m_pcVecs_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_ce0,
        pca_m_pcVecs_q0 => pca_m_pcVecs_q0,
        pca_m_pcVecs_3_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_address0,
        pca_m_pcVecs_3_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_ce0,
        pca_m_pcVecs_3_q0 => pca_m_pcVecs_3_q0,
        pca_m_pcVecs_4_address0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_address0,
        pca_m_pcVecs_4_ce0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_ce0,
        pca_m_pcVecs_4_q0 => pca_m_pcVecs_4_q0,
        grp_fu_447_p_din0 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din0,
        grp_fu_447_p_din1 => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din1,
        grp_fu_447_p_dout0 => grp_fu_447_p2,
        grp_fu_447_p_ce => grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_ce);

    dsqrt_64ns_64ns_64_30_no_dsp_0_U346 : component dut_dsqrt_64ns_64ns_64_30_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => pca_m_pcVals_1_load_reg_375,
        ce => ap_const_logic_1,
        dout => grp_fu_267_p2);

    dsqrt_64ns_64ns_64_30_no_dsp_0_U347 : component dut_dsqrt_64ns_64ns_64_30_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => pca_m_pcVals_1_load_1_reg_390,
        ce => ap_const_logic_1,
        dout => grp_fu_273_p2);

    dsqrt_64ns_64ns_64_30_no_dsp_0_U348 : component dut_dsqrt_64ns_64ns_64_30_no_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => pca_m_pcVals_1_load_2_reg_395,
        ce => ap_const_logic_1,
        dout => grp_fu_279_p2);

    mul_32ns_32ns_64_2_1_U349 : component dut_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_285_p0,
        din1 => grp_fu_285_p1,
        ce => grp_fu_285_ce,
        dout => grp_fu_285_p2);

    dmul_64ns_64ns_64_8_max_dsp_1_U350 : component dut_dmul_64ns_64ns_64_8_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_439_p0,
        din1 => grp_fu_439_p1,
        ce => grp_fu_439_ce,
        dout => grp_fu_439_p2);

    dmul_64ns_64ns_64_8_max_dsp_1_U351 : component dut_dmul_64ns_64ns_64_8_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_443_p0,
        din1 => grp_fu_443_p1,
        ce => grp_fu_443_ce,
        dout => grp_fu_443_p2);

    mul_32ns_34ns_65_2_1_U352 : component dut_mul_32ns_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_447_p0,
        din1 => grp_fu_447_p1,
        ce => grp_fu_447_ce,
        dout => grp_fu_447_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done <= ap_const_logic_0;
                elsif ((grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready <= ap_const_logic_0;
                elsif ((grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_ready = ap_const_logic_1)) then 
                    grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready = ap_const_logic_1)) then 
                    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_ready = ap_const_logic_1)) then 
                    grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                    grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_ready = ap_const_logic_1)) then 
                    grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln277_fu_298_p2 = ap_const_lv1_0))) then 
                    grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_ready = ap_const_logic_1)) then 
                    grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_implement_fu_225_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_implement_fu_225_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_implement_fu_225_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_implement_fu_225_ap_ready = ap_const_logic_1)) then 
                    grp_implement_fu_225_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                icmp_ln277_reg_400 <= icmp_ln277_fu_298_p2;
                sqrtVals_1_reg_409 <= grp_fu_273_p2;
                sqrtVals_2_reg_414 <= grp_fu_279_p2;
                sqrtVals_reg_404 <= grp_fu_267_p2;
                sub_ln350_reg_419 <= sub_ln350_fu_313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                mul_ln31_reg_365 <= grp_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                pca_m_pcVals_1_load_1_reg_390 <= pca_m_pcVals_1_q1;
                pca_m_pcVals_1_load_2_reg_395 <= pca_m_pcVals_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                pca_m_pcVals_1_load_reg_375 <= pca_m_pcVals_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln31_reg_354 <= trunc_ln31_fu_289_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln277_fu_298_p2, ap_CS_fsm_state41, ap_CS_fsm_state44, grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done, grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done, grp_implement_fu_225_ap_done, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done, ap_CS_fsm_state2, ap_block_state4_on_subcall_done, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state42, ap_block_state44_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_implement_fu_225_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (icmp_ln277_fu_298_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                if (((grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_boolean_0 = ap_block_state44_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done)
    begin
        if ((grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;

    ap_ST_fsm_state42_blk_assign_proc : process(grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done)
    begin
        if ((grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state43_blk <= ap_const_logic_0;

    ap_ST_fsm_state44_blk_assign_proc : process(ap_block_state44_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state44_on_subcall_done)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done)
    begin
        if ((grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_implement_fu_225_ap_done)
    begin
        if ((grp_implement_fu_225_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state44_on_subcall_done_assign_proc : process(icmp_ln277_reg_400, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_done)
    begin
                ap_block_state44_on_subcall_done <= ((grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_done = ap_const_logic_0) and (icmp_ln277_reg_400 = ap_const_lv1_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready, ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready and ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done) = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done <= (grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done or ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_done);
    ap_sync_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready <= (grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready or ap_sync_reg_grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_ready);

    covMatrix_address0_assign_proc : process(ap_CS_fsm_state4, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address0, grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            covMatrix_address0 <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            covMatrix_address0 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_address0;
        else 
            covMatrix_address0 <= "XXXXXXXX";
        end if; 
    end process;


    covMatrix_ce0_assign_proc : process(ap_CS_fsm_state4, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce0, grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            covMatrix_ce0 <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_covMatrix_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            covMatrix_ce0 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_ce0;
        else 
            covMatrix_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    covMatrix_we0_assign_proc : process(ap_CS_fsm_state4, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            covMatrix_we0 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_outCovMatrix_we0;
        else 
            covMatrix_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_ap_start_reg;

    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_continue_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_continue <= ap_const_logic_1;
        else 
            grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_ap_start_reg;
    grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_ap_start_reg;
    grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_ap_start_reg;
    grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_ap_start_reg;

    grp_fu_285_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            grp_fu_285_ce <= ap_const_logic_1;
        else 
            grp_fu_285_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_285_p0 <= zext_ln31_fu_293_p1(32 - 1 downto 0);
    grp_fu_285_p1 <= zext_ln31_fu_293_p1(32 - 1 downto 0);

    grp_fu_439_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_ce, grp_implement_fu_225_grp_fu_439_p_ce, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_439_ce <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_439_ce <= grp_implement_fu_225_grp_fu_439_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_439_ce <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_ce;
        else 
            grp_fu_439_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_439_p0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din0, grp_implement_fu_225_grp_fu_439_p_din0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_439_p0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_439_p0 <= grp_implement_fu_225_grp_fu_439_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_439_p0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din0;
        else 
            grp_fu_439_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_439_p1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din1, grp_implement_fu_225_grp_fu_439_p_din1, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_439_p1 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_439_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_439_p1 <= grp_implement_fu_225_grp_fu_439_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_439_p1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_439_p_din1;
        else 
            grp_fu_439_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_ce_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_ce, grp_implement_fu_225_grp_fu_443_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_443_ce <= grp_implement_fu_225_grp_fu_443_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_443_ce <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_ce;
        else 
            grp_fu_443_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_443_p0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din0, grp_implement_fu_225_grp_fu_443_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_443_p0 <= grp_implement_fu_225_grp_fu_443_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_443_p0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din0;
        else 
            grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din1, grp_implement_fu_225_grp_fu_443_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_443_p1 <= grp_implement_fu_225_grp_fu_443_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_443_p1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_grp_fu_443_p_din1;
        else 
            grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_447_ce_assign_proc : process(ap_CS_fsm_state44, grp_implement_fu_225_grp_fu_447_p_ce, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_ce, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_ce, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_447_ce <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_447_ce <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_447_ce <= grp_implement_fu_225_grp_fu_447_p_ce;
        else 
            grp_fu_447_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_447_p0_assign_proc : process(ap_CS_fsm_state44, grp_implement_fu_225_grp_fu_447_p_din0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_447_p0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_447_p0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_447_p0 <= grp_implement_fu_225_grp_fu_447_p_din0;
        else 
            grp_fu_447_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_447_p1_assign_proc : process(ap_CS_fsm_state44, grp_implement_fu_225_grp_fu_447_p_din1, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din1, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din1, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_447_p1 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_grp_fu_447_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_447_p1 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_grp_fu_447_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_447_p1 <= grp_implement_fu_225_grp_fu_447_p_din1;
        else 
            grp_fu_447_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_implement_fu_225_ap_start <= grp_implement_fu_225_ap_start_reg;
    icmp_ln277_fu_298_p2 <= "1" when (rows = ap_const_lv32_0) else "0";

    input_r_address0_assign_proc : process(ap_CS_fsm_state4, grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address0, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_address0 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_address0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address0;
        else 
            input_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_state4, grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address1, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_address1 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_address1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_address1;
        else 
            input_r_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_state4, grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce0, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_ce0 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_ce0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce0;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_state4, grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce1, grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_ce1 <= grp_covCoreWrapper_double_15_80_1_2_16_s_fu_207_input_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_ce1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_ce1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_r_d0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d0;
    input_r_d1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_d1;

    input_r_we0_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_we0 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we0;
        else 
            input_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_we1_assign_proc : process(grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_we1 <= grp_aveImpl_double_15_80_1_2_16_s_fu_197_input_r_we1;
        else 
            input_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    outputComponents_0_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_address0;
    outputComponents_0_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_ce0;
    outputComponents_0_d0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_d0;
    outputComponents_0_we0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_0_we0;
    outputComponents_1_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_address0;
    outputComponents_1_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_ce0;
    outputComponents_1_d0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_d0;
    outputComponents_1_we0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_1_we0;
    outputComponents_2_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_address0;
    outputComponents_2_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_ce0;
    outputComponents_2_d0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_d0;
    outputComponents_2_we0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_outputComponents_2_we0;
    outputExplainedVariance_0 <= pca_m_pcVals_0_q0;

    outputExplainedVariance_0_ap_vld_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            outputExplainedVariance_0_ap_vld <= ap_const_logic_1;
        else 
            outputExplainedVariance_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outputExplainedVariance_1 <= pca_m_pcVals_0_q1;

    outputExplainedVariance_1_ap_vld_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            outputExplainedVariance_1_ap_vld <= ap_const_logic_1;
        else 
            outputExplainedVariance_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outputExplainedVariance_2 <= pca_m_pcVals_0_q0;

    outputExplainedVariance_2_ap_vld_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            outputExplainedVariance_2_ap_vld <= ap_const_logic_1;
        else 
            outputExplainedVariance_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outputLoadings_0_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_address0;
    outputLoadings_0_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_ce0;
    outputLoadings_0_d0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_d0;
    outputLoadings_0_we0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_0_we0;
    outputLoadings_1_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_address0;
    outputLoadings_1_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_ce0;
    outputLoadings_1_d0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_d0;
    outputLoadings_1_we0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_1_we0;
    outputLoadings_2_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_address0;
    outputLoadings_2_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_ce0;
    outputLoadings_2_d0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_d0;
    outputLoadings_2_we0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_outputLoadings_2_we0;
    p_shl3_fu_306_p3 <= (rows & ap_const_lv2_0);

    pca_m_pcVals_0_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_implement_fu_225_this_m_pcVals_0_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            pca_m_pcVals_0_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            pca_m_pcVals_0_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_0_address0 <= grp_implement_fu_225_this_m_pcVals_0_address0;
        else 
            pca_m_pcVals_0_address0 <= "XX";
        end if; 
    end process;

    pca_m_pcVals_0_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    pca_m_pcVals_0_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_implement_fu_225_this_m_pcVals_0_ce0, ap_CS_fsm_state8, ap_block_state44_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((ap_const_boolean_0 = ap_block_state44_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            pca_m_pcVals_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_0_ce0 <= grp_implement_fu_225_this_m_pcVals_0_ce0;
        else 
            pca_m_pcVals_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVals_0_ce1_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            pca_m_pcVals_0_ce1 <= ap_const_logic_1;
        else 
            pca_m_pcVals_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVals_0_we0_assign_proc : process(grp_implement_fu_225_this_m_pcVals_0_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_0_we0 <= grp_implement_fu_225_this_m_pcVals_0_we0;
        else 
            pca_m_pcVals_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVals_1_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, grp_implement_fu_225_this_m_pcVals_1_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            pca_m_pcVals_1_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            pca_m_pcVals_1_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_1_address0 <= grp_implement_fu_225_this_m_pcVals_1_address0;
        else 
            pca_m_pcVals_1_address0 <= "XX";
        end if; 
    end process;

    pca_m_pcVals_1_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    pca_m_pcVals_1_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, grp_implement_fu_225_this_m_pcVals_1_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            pca_m_pcVals_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_1_ce0 <= grp_implement_fu_225_this_m_pcVals_1_ce0;
        else 
            pca_m_pcVals_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVals_1_ce1_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            pca_m_pcVals_1_ce1 <= ap_const_logic_1;
        else 
            pca_m_pcVals_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVals_1_we0_assign_proc : process(grp_implement_fu_225_this_m_pcVals_1_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVals_1_we0 <= grp_implement_fu_225_this_m_pcVals_1_we0;
        else 
            pca_m_pcVals_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_3_address0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_1_address0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_address0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_address0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_3_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_3_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_3_address0 <= grp_implement_fu_225_this_m_pcVecs_1_address0;
        else 
            pca_m_pcVecs_3_address0 <= "XXXXX";
        end if; 
    end process;


    pca_m_pcVecs_3_ce0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_1_ce0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_ce0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_ce0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_3_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_3_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_3_ce0 <= grp_implement_fu_225_this_m_pcVecs_1_ce0;
        else 
            pca_m_pcVecs_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_3_ce1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_1_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_3_ce1 <= grp_implement_fu_225_this_m_pcVecs_1_ce1;
        else 
            pca_m_pcVecs_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_3_we0_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_1_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_3_we0 <= grp_implement_fu_225_this_m_pcVecs_1_we0;
        else 
            pca_m_pcVecs_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_3_we1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_1_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_3_we1 <= grp_implement_fu_225_this_m_pcVecs_1_we1;
        else 
            pca_m_pcVecs_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_4_address0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_2_address0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_address0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_address0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_4_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_4_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_4_address0 <= grp_implement_fu_225_this_m_pcVecs_2_address0;
        else 
            pca_m_pcVecs_4_address0 <= "XXXXX";
        end if; 
    end process;


    pca_m_pcVecs_4_ce0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_2_ce0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_ce0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_ce0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_4_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_4_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_4_ce0 <= grp_implement_fu_225_this_m_pcVecs_2_ce0;
        else 
            pca_m_pcVecs_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_4_ce1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_2_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_4_ce1 <= grp_implement_fu_225_this_m_pcVecs_2_ce1;
        else 
            pca_m_pcVecs_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_4_we0_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_2_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_4_we0 <= grp_implement_fu_225_this_m_pcVecs_2_we0;
        else 
            pca_m_pcVecs_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_4_we1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_2_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_4_we1 <= grp_implement_fu_225_this_m_pcVecs_2_we1;
        else 
            pca_m_pcVecs_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_address0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_0_address0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_address0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_address0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_address0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_address0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_address0 <= grp_implement_fu_225_this_m_pcVecs_0_address0;
        else 
            pca_m_pcVecs_address0 <= "XXXXX";
        end if; 
    end process;


    pca_m_pcVecs_ce0_assign_proc : process(icmp_ln277_reg_400, ap_CS_fsm_state44, grp_implement_fu_225_this_m_pcVecs_0_ce0, grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_ce0, grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_ce0, ap_CS_fsm_state8, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (icmp_ln277_reg_400 = ap_const_lv1_0))) then 
            pca_m_pcVecs_ce0 <= grp_dut_Pipeline_VITIS_LOOP_321_1_fu_253_pca_m_pcVecs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pca_m_pcVecs_ce0 <= grp_dut_Pipeline_VITIS_LOOP_350_2_VITIS_LOOP_351_3_fu_236_pca_m_pcVecs_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_ce0 <= grp_implement_fu_225_this_m_pcVecs_0_ce0;
        else 
            pca_m_pcVecs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_ce1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_0_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_ce1 <= grp_implement_fu_225_this_m_pcVecs_0_ce1;
        else 
            pca_m_pcVecs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_we0_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_0_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_we0 <= grp_implement_fu_225_this_m_pcVecs_0_we0;
        else 
            pca_m_pcVecs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pca_m_pcVecs_we1_assign_proc : process(grp_implement_fu_225_this_m_pcVecs_0_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pca_m_pcVecs_we1 <= grp_implement_fu_225_this_m_pcVecs_0_we1;
        else 
            pca_m_pcVecs_we1 <= ap_const_logic_0;
        end if; 
    end process;


    standarisedData_address0_assign_proc : process(grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_address0, grp_implement_fu_225_standarisedData_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            standarisedData_address0 <= grp_implement_fu_225_standarisedData_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            standarisedData_address0 <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_address0;
        else 
            standarisedData_address0 <= "XXXXXXXX";
        end if; 
    end process;


    standarisedData_ce0_assign_proc : process(grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_ce0, grp_implement_fu_225_standarisedData_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            standarisedData_ce0 <= grp_implement_fu_225_standarisedData_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            standarisedData_ce0 <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_ce0;
        else 
            standarisedData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    standarisedData_we0_assign_proc : process(grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            standarisedData_we0 <= grp_dut_Pipeline_VITIS_LOOP_277_1_VITIS_LOOP_278_2_fu_216_standarisedData_we0;
        else 
            standarisedData_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln350_fu_313_p2 <= std_logic_vector(unsigned(p_shl3_fu_306_p3) - unsigned(zext_ln350_fu_303_p1));
    trunc_ln31_fu_289_p1 <= rows(8 - 1 downto 0);
    zext_ln31_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rows),64));
    zext_ln350_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rows),34));
end behav;
