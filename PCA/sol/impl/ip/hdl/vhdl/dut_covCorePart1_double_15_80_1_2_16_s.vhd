-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_covCorePart1_double_15_80_1_2_16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    values2Strm_0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    values2Strm_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    values2Strm_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    values2Strm_0_full_n : IN STD_LOGIC;
    values2Strm_0_write : OUT STD_LOGIC;
    values2Strm_1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    values2Strm_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    values2Strm_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    values2Strm_1_full_n : IN STD_LOGIC;
    values2Strm_1_write : OUT STD_LOGIC;
    rows_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    rows_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    rows_c_full_n : IN STD_LOGIC;
    rows_c_write : OUT STD_LOGIC;
    cols_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    cols_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    cols_c_full_n : IN STD_LOGIC;
    cols_c_write : OUT STD_LOGIC );
end;


architecture behav of dut_covCorePart1_double_15_80_1_2_16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv31_10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal rows_c_blk_n : STD_LOGIC;
    signal cols_c_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal smax_fu_187_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax_reg_408 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln194_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln194_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln194_fu_225_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln194_reg_425 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln206_fu_247_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln206_reg_430 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln_reg_435 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln197_fu_276_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln197_reg_443 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln210_fu_306_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln210_reg_448 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmp79_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp79_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp18_not_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp18_not_reg_458 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp30_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp30_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln210_1_fu_358_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln210_1_reg_468 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmp30_1_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp30_1_reg_473 : STD_LOGIC_VECTOR (0 downto 0);
    signal values2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal values2_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_idle : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1 : STD_LOGIC;
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_142 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln194_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal indvars_iv18_fu_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln194_1_fu_369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln197_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_102 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal empty_92_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_177_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln194_1_fu_212_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln194_fu_208_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_231_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_239_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln197_1_fu_267_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln197_fu_263_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_290_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_19_fu_298_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_17_fu_282_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_93_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln210_1_fu_338_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln210_fu_334_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_fu_342_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_350_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dut_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        values2Strm_0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        values2Strm_0_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        values2Strm_0_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        values2Strm_0_full_n : IN STD_LOGIC;
        values2Strm_0_write : OUT STD_LOGIC;
        values2Strm_1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        values2Strm_1_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        values2Strm_1_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        values2Strm_1_full_n : IN STD_LOGIC;
        values2Strm_1_write : OUT STD_LOGIC;
        smax : IN STD_LOGIC_VECTOR (30 downto 0);
        add_ln206 : IN STD_LOGIC_VECTOR (10 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln210 : IN STD_LOGIC_VECTOR (10 downto 0);
        add_ln210_1 : IN STD_LOGIC_VECTOR (10 downto 0);
        values2_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values2_1_ce0 : OUT STD_LOGIC;
        values2_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        values2_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values2_1_ce1 : OUT STD_LOGIC;
        values2_1_we1 : OUT STD_LOGIC;
        values2_1_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        values2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values2_ce0 : OUT STD_LOGIC;
        values2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        values2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values2_ce1 : OUT STD_LOGIC;
        values2_we1 : OUT STD_LOGIC;
        values2_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp18_not : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp30_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp30 : IN STD_LOGIC_VECTOR (0 downto 0);
        cmp79 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_covCorePart1_double_15_80_1_2_16_s_values2_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    values2_U : component dut_covCorePart1_double_15_80_1_2_16_s_values2_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0,
        ce0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0,
        q0 => values2_q0,
        address1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1,
        ce1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1,
        we1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1,
        d1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1);

    values2_1_U : component dut_covCorePart1_double_15_80_1_2_16_s_values2_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0,
        ce0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0,
        q0 => values2_1_q0,
        address1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1,
        ce1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1,
        we1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1,
        d1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1);

    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153 : component dut_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start,
        ap_done => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done,
        ap_idle => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_idle,
        ap_ready => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready,
        values2Strm_0_din => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din,
        values2Strm_0_num_data_valid => ap_const_lv6_0,
        values2Strm_0_fifo_cap => ap_const_lv6_0,
        values2Strm_0_full_n => values2Strm_0_full_n,
        values2Strm_0_write => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write,
        values2Strm_1_din => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din,
        values2Strm_1_num_data_valid => ap_const_lv6_0,
        values2Strm_1_fifo_cap => ap_const_lv6_0,
        values2Strm_1_full_n => values2Strm_1_full_n,
        values2Strm_1_write => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write,
        smax => smax_reg_408,
        add_ln206 => add_ln206_reg_430,
        input_r_address0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0,
        input_r_ce0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0,
        input_r_q0 => input_r_q0,
        input_r_address1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1,
        input_r_ce1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1,
        input_r_q1 => input_r_q1,
        add_ln210 => add_ln210_reg_448,
        add_ln210_1 => add_ln210_1_reg_468,
        values2_1_address0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address0,
        values2_1_ce0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce0,
        values2_1_q0 => values2_1_q0,
        values2_1_address1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_address1,
        values2_1_ce1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_ce1,
        values2_1_we1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_we1,
        values2_1_d1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_1_d1,
        values2_address0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address0,
        values2_ce0 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce0,
        values2_q0 => values2_q0,
        values2_address1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_address1,
        values2_ce1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_ce1,
        values2_we1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_we1,
        values2_d1 => grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2_d1,
        cols => cols,
        cmp18_not => cmp18_not_reg_458,
        cmp30_1 => cmp30_1_reg_473,
        cmp30 => cmp30_reg_463,
        cmp79 => cmp79_reg_453);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln194_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_102 <= ap_const_lv31_0;
            elsif (((icmp_ln197_fu_271_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_fu_102 <= add_ln194_reg_425;
            end if; 
        end if;
    end process;

    indvars_iv18_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv18_fu_98 <= ap_const_lv32_4;
            elsif (((icmp_ln197_fu_271_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvars_iv18_fu_98 <= add_ln194_1_fu_369_p2;
            end if; 
        end if;
    end process;

    j_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln194_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_142 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done = ap_const_logic_1))) then 
                j_reg_142 <= add_ln197_reg_443;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln194_reg_425 <= add_ln194_fu_225_p2;
                    add_ln206_reg_430(10 downto 4) <= add_ln206_fu_247_p2(10 downto 4);
                trunc_ln_reg_435 <= indvars_iv18_fu_98(31 downto 1);
                    zext_ln194_reg_416(30 downto 0) <= zext_ln194_fu_216_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln197_reg_443 <= add_ln197_fu_276_p2;
                    add_ln210_1_reg_468(10 downto 5) <= add_ln210_1_fu_358_p2(10 downto 5);
                    add_ln210_reg_448(10 downto 5) <= add_ln210_fu_306_p2(10 downto 5);
                cmp18_not_reg_458 <= cmp18_not_fu_318_p2;
                cmp30_1_reg_473 <= cmp30_1_fu_364_p2;
                cmp30_reg_463 <= cmp30_fu_323_p2;
                cmp79_reg_453 <= cmp79_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                smax_reg_408 <= smax_fu_187_p3;
            end if;
        end if;
    end process;
    zext_ln194_reg_416(31) <= '0';
    add_ln206_reg_430(3 downto 0) <= "0000";
    add_ln210_reg_448(4 downto 0) <= "00000";
    add_ln210_1_reg_468(4 downto 0) <= "10000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done, ap_CS_fsm_state5, icmp_ln194_fu_220_p2, icmp_ln197_fu_271_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln194_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln197_fu_271_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln194_1_fu_369_p2 <= std_logic_vector(unsigned(indvars_iv18_fu_98) + unsigned(ap_const_lv32_1));
    add_ln194_fu_225_p2 <= std_logic_vector(unsigned(i_fu_102) + unsigned(ap_const_lv31_1));
    add_ln197_fu_276_p2 <= std_logic_vector(unsigned(j_reg_142) + unsigned(ap_const_lv31_1));
    add_ln206_fu_247_p2 <= std_logic_vector(unsigned(tmp_s_fu_231_p3) + unsigned(tmp_16_fu_239_p3));
    add_ln210_1_fu_358_p2 <= std_logic_vector(unsigned(tmp_20_fu_342_p3) + unsigned(tmp_21_fu_350_p3));
    add_ln210_fu_306_p2 <= std_logic_vector(unsigned(tmp_18_fu_290_p3) + unsigned(tmp_19_fu_298_p3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done)
    begin
        if ((grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, rows_c_full_n, cols_c_full_n)
    begin
                ap_block_state1 <= ((cols_c_full_n = ap_const_logic_0) or (rows_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln194_fu_220_p2)
    begin
        if (((icmp_ln194_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    cmp18_not_fu_318_p2 <= "1" when (unsigned(j_reg_142) > unsigned(i_fu_102)) else "0";
    cmp30_1_fu_364_p2 <= "1" when (unsigned(empty_93_fu_328_p2) > unsigned(zext_ln194_reg_416)) else "0";
    cmp30_fu_323_p2 <= "1" when (unsigned(tmp_17_fu_282_p3) > unsigned(zext_ln194_reg_416)) else "0";
    cmp79_fu_312_p2 <= "1" when (j_reg_142 = ap_const_lv31_0) else "0";

    cols_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_c_blk_n <= cols_c_full_n;
        else 
            cols_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_c_din <= cols;

    cols_c_write_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_c_write <= ap_const_logic_1;
        else 
            cols_c_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_92_fu_181_p2 <= "1" when (signed(cols) > signed(ap_const_lv32_10)) else "0";
    empty_93_fu_328_p2 <= (tmp_17_fu_282_p3 or ap_const_lv32_1);
    empty_fu_177_p1 <= cols(31 - 1 downto 0);
    grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_ap_start_reg;
    icmp_ln194_fu_220_p2 <= "1" when (signed(zext_ln194_fu_216_p1) < signed(rows)) else "0";
    icmp_ln197_fu_271_p2 <= "1" when (j_reg_142 = trunc_ln_reg_435) else "0";
    input_r_address0 <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address0;
    input_r_address1 <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_address1;
    input_r_ce0 <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce0;
    input_r_ce1 <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_input_r_ce1;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln194_fu_220_p2)
    begin
        if (((icmp_ln194_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    rows_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_c_blk_n <= rows_c_full_n;
        else 
            rows_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_c_din <= rows;

    rows_c_write_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_c_write <= ap_const_logic_1;
        else 
            rows_c_write <= ap_const_logic_0;
        end if; 
    end process;

    smax_fu_187_p3 <= 
        empty_fu_177_p1 when (empty_92_fu_181_p2(0) = '1') else 
        ap_const_lv31_10;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_16_fu_239_p3 <= (trunc_ln194_fu_208_p1 & ap_const_lv4_0);
    tmp_17_fu_282_p3 <= (j_reg_142 & ap_const_lv1_0);
    tmp_18_fu_290_p3 <= (trunc_ln197_1_fu_267_p1 & ap_const_lv7_0);
    tmp_19_fu_298_p3 <= (trunc_ln197_fu_263_p1 & ap_const_lv5_0);
    tmp_20_fu_342_p3 <= (trunc_ln210_1_fu_338_p1 & ap_const_lv6_0);
    tmp_21_fu_350_p3 <= (trunc_ln210_fu_334_p1 & ap_const_lv4_0);
    tmp_s_fu_231_p3 <= (trunc_ln194_1_fu_212_p1 & ap_const_lv6_0);
    trunc_ln194_1_fu_212_p1 <= i_fu_102(5 - 1 downto 0);
    trunc_ln194_fu_208_p1 <= i_fu_102(7 - 1 downto 0);
    trunc_ln197_1_fu_267_p1 <= j_reg_142(4 - 1 downto 0);
    trunc_ln197_fu_263_p1 <= j_reg_142(6 - 1 downto 0);
    trunc_ln210_1_fu_338_p1 <= empty_93_fu_328_p2(5 - 1 downto 0);
    trunc_ln210_fu_334_p1 <= empty_93_fu_328_p2(7 - 1 downto 0);
    values2Strm_0_din <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_din;

    values2Strm_0_write_assign_proc : process(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            values2Strm_0_write <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_0_write;
        else 
            values2Strm_0_write <= ap_const_logic_0;
        end if; 
    end process;

    values2Strm_1_din <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_din;

    values2Strm_1_write_assign_proc : process(grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            values2Strm_1_write <= grp_covCorePart1_double_15_80_1_2_16_Pipeline_loop_c2_fu_153_values2Strm_1_write;
        else 
            values2Strm_1_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln194_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_102),32));
end behav;
