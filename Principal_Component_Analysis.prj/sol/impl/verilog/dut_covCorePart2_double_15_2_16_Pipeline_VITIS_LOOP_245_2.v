// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dut_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        values2Strm_0_dout,
        values2Strm_0_num_data_valid,
        values2Strm_0_fifo_cap,
        values2Strm_0_empty_n,
        values2Strm_0_read,
        values2Strm_1_dout,
        values2Strm_1_num_data_valid,
        values2Strm_1_fifo_cap,
        values2Strm_1_empty_n,
        values2Strm_1_read,
        trunc_ln,
        sub_ln255,
        outCovMatrix_address0,
        outCovMatrix_ce0,
        outCovMatrix_we0,
        outCovMatrix_d0,
        zext_ln243,
        d1_cols,
        zext_ln243_1
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] values2Strm_0_dout;
input  [5:0] values2Strm_0_num_data_valid;
input  [5:0] values2Strm_0_fifo_cap;
input   values2Strm_0_empty_n;
output   values2Strm_0_read;
input  [63:0] values2Strm_1_dout;
input  [5:0] values2Strm_1_num_data_valid;
input  [5:0] values2Strm_1_fifo_cap;
input   values2Strm_1_empty_n;
output   values2Strm_1_read;
input  [30:0] trunc_ln;
input  [7:0] sub_ln255;
output  [7:0] outCovMatrix_address0;
output   outCovMatrix_ce0;
output   outCovMatrix_we0;
output  [63:0] outCovMatrix_d0;
input  [7:0] zext_ln243;
input  [63:0] d1_cols;
input  [30:0] zext_ln243_1;

reg ap_idle;
reg values2Strm_0_read;
reg values2Strm_1_read;
reg[7:0] outCovMatrix_address0;
reg outCovMatrix_ce0;
reg outCovMatrix_we0;
reg[63:0] outCovMatrix_d0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
reg   [0:0] icmp_ln245_reg_482;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_subdone;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    values2Strm_0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
reg    values2Strm_1_blk_n;
reg   [63:0] reg_164;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] reg_168;
wire   [63:0] grp_fu_150_p2;
reg   [63:0] reg_172;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
wire   [31:0] zext_ln243_1_cast_fu_178_p1;
reg   [31:0] zext_ln243_1_cast_reg_465;
reg   [30:0] j_2_reg_470;
wire   [2:0] trunc_ln245_fu_190_p1;
reg   [2:0] trunc_ln245_reg_477;
reg   [2:0] trunc_ln245_reg_477_pp0_iter1_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter2_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter3_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter4_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter5_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter6_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter7_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter8_reg;
reg   [2:0] trunc_ln245_reg_477_pp0_iter9_reg;
wire   [0:0] icmp_ln245_fu_194_p2;
reg   [0:0] icmp_ln245_reg_482_pp0_iter1_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter2_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter3_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter4_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter5_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter6_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter7_reg;
reg   [0:0] icmp_ln245_reg_482_pp0_iter8_reg;
wire   [63:0] bitcast_ln251_fu_200_p1;
wire   [63:0] bitcast_ln251_16_fu_205_p1;
reg   [63:0] values2Strm_0_read_2_reg_496;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg   [63:0] values2Strm_1_read_2_reg_501;
reg   [63:0] values2Strm_0_read_3_reg_506;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] values2Strm_0_read_3_reg_506_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_3_reg_511;
reg   [63:0] values2Strm_1_read_3_reg_511_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_4_reg_516;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg   [63:0] values2Strm_0_read_4_reg_516_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_4_reg_521;
reg   [63:0] values2Strm_1_read_4_reg_521_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_5_reg_526;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg   [63:0] values2Strm_0_read_5_reg_526_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_5_reg_526_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_5_reg_531;
reg   [63:0] values2Strm_1_read_5_reg_531_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_5_reg_531_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_6_reg_536;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg   [63:0] values2Strm_0_read_6_reg_536_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_6_reg_536_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_6_reg_541;
reg   [63:0] values2Strm_1_read_6_reg_541_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_6_reg_541_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_7_reg_546;
reg   [63:0] values2Strm_0_read_7_reg_546_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_7_reg_546_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_7_reg_546_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_7_reg_551;
reg   [63:0] values2Strm_1_read_7_reg_551_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_7_reg_551_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_7_reg_551_pp0_iter3_reg;
reg   [63:0] cov_reg_556;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg   [63:0] values2Strm_0_read_8_reg_561;
reg   [63:0] values2Strm_0_read_8_reg_561_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_8_reg_561_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_8_reg_561_pp0_iter3_reg;
wire   [63:0] grp_fu_155_p2;
reg   [63:0] cov_16_reg_566;
reg   [63:0] values2Strm_1_read_8_reg_571;
reg   [63:0] values2Strm_1_read_8_reg_571_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_8_reg_571_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_8_reg_571_pp0_iter3_reg;
wire   [63:0] bitcast_ln251_1_fu_210_p1;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg   [63:0] values2Strm_0_read_9_reg_581;
reg   [63:0] values2Strm_0_read_9_reg_581_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_9_reg_581_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_9_reg_581_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_9_reg_581_pp0_iter4_reg;
wire   [63:0] bitcast_ln251_17_fu_215_p1;
reg   [63:0] values2Strm_1_read_9_reg_591;
reg   [63:0] values2Strm_1_read_9_reg_591_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_9_reg_591_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_9_reg_591_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_9_reg_591_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_10_reg_596;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg   [63:0] values2Strm_0_read_10_reg_596_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_10_reg_596_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_10_reg_596_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_10_reg_596_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_10_reg_601;
reg   [63:0] values2Strm_1_read_10_reg_601_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_10_reg_601_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_10_reg_601_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_10_reg_601_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_11_reg_606;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg   [63:0] values2Strm_0_read_11_reg_606_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_11_reg_606_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_11_reg_606_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_11_reg_606_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_11_reg_606_pp0_iter5_reg;
reg   [63:0] values2Strm_1_read_11_reg_611;
reg   [63:0] values2Strm_1_read_11_reg_611_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_11_reg_611_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_11_reg_611_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_11_reg_611_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_11_reg_611_pp0_iter5_reg;
reg   [63:0] values2Strm_0_read_12_reg_616;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg   [63:0] values2Strm_0_read_12_reg_616_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_12_reg_616_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_12_reg_616_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_12_reg_616_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_12_reg_616_pp0_iter5_reg;
reg   [63:0] values2Strm_1_read_12_reg_621;
reg   [63:0] values2Strm_1_read_12_reg_621_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_12_reg_621_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_12_reg_621_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_12_reg_621_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_12_reg_621_pp0_iter5_reg;
reg   [63:0] values2Strm_0_read_13_reg_626;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter5_reg;
reg   [63:0] values2Strm_0_read_13_reg_626_pp0_iter6_reg;
reg   [63:0] values2Strm_1_read_13_reg_631;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter5_reg;
reg   [63:0] values2Strm_1_read_13_reg_631_pp0_iter6_reg;
wire   [6:0] trunc_ln245_1_fu_225_p1;
reg   [6:0] trunc_ln245_1_reg_636;
reg    ap_block_pp0_stage15_11001;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter1_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter2_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter3_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter4_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter5_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter6_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter7_reg;
reg   [6:0] trunc_ln245_1_reg_636_pp0_iter8_reg;
reg   [63:0] values2Strm_0_read_14_reg_641;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter1_reg;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter5_reg;
reg   [63:0] values2Strm_0_read_14_reg_641_pp0_iter6_reg;
reg   [63:0] values2Strm_1_read_14_reg_646;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter1_reg;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter5_reg;
reg   [63:0] values2Strm_1_read_14_reg_646_pp0_iter6_reg;
wire   [3:0] trunc_ln254_fu_241_p1;
reg   [3:0] trunc_ln254_reg_651;
reg   [3:0] trunc_ln254_reg_651_pp0_iter1_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter2_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter3_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter4_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter5_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter6_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter7_reg;
reg   [3:0] trunc_ln254_reg_651_pp0_iter8_reg;
wire   [7:0] trunc_ln255_fu_245_p1;
reg   [7:0] trunc_ln255_reg_656;
reg   [7:0] trunc_ln255_reg_656_pp0_iter1_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter2_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter3_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter4_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter5_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter6_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter7_reg;
reg   [7:0] trunc_ln255_reg_656_pp0_iter8_reg;
wire   [0:0] icmp_ln254_fu_249_p2;
reg   [0:0] icmp_ln254_reg_662;
reg   [0:0] icmp_ln254_reg_662_pp0_iter1_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter2_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter3_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter4_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter5_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter6_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter7_reg;
reg   [0:0] icmp_ln254_reg_662_pp0_iter8_reg;
reg   [63:0] values2Strm_0_read_15_reg_666;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter2_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter3_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter4_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter5_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter6_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter7_reg;
reg   [63:0] values2Strm_0_read_15_reg_666_pp0_iter8_reg;
reg   [63:0] values2Strm_1_read_15_reg_671;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter2_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter3_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter4_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter5_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter6_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter7_reg;
reg   [63:0] values2Strm_1_read_15_reg_671_pp0_iter8_reg;
reg   [63:0] cov_1_reg_676;
reg   [63:0] cov_17_reg_681;
wire   [63:0] bitcast_ln251_2_fu_259_p1;
wire   [63:0] bitcast_ln251_18_fu_263_p1;
reg   [63:0] cov_2_reg_696;
reg   [63:0] cov_18_reg_701;
wire   [63:0] bitcast_ln251_3_fu_267_p1;
wire   [63:0] bitcast_ln251_19_fu_271_p1;
reg   [63:0] cov_3_reg_716;
reg   [63:0] cov_19_reg_721;
wire   [63:0] bitcast_ln251_4_fu_275_p1;
wire   [63:0] bitcast_ln251_20_fu_279_p1;
reg   [63:0] cov_4_reg_736;
reg   [63:0] cov_20_reg_741;
wire   [63:0] bitcast_ln251_5_fu_283_p1;
wire   [63:0] bitcast_ln251_21_fu_287_p1;
reg   [63:0] cov_5_reg_756;
reg   [63:0] cov_21_reg_761;
wire   [63:0] bitcast_ln251_6_fu_291_p1;
wire   [63:0] bitcast_ln251_22_fu_295_p1;
reg   [63:0] cov_6_reg_776;
reg   [63:0] cov_22_reg_781;
wire   [63:0] bitcast_ln251_7_fu_299_p1;
wire   [63:0] bitcast_ln251_23_fu_303_p1;
reg   [63:0] cov_7_reg_796;
reg   [63:0] cov_23_reg_801;
wire   [63:0] bitcast_ln251_8_fu_307_p1;
wire   [63:0] bitcast_ln251_24_fu_311_p1;
reg   [63:0] cov_8_reg_816;
reg   [63:0] cov_24_reg_821;
wire   [63:0] bitcast_ln251_9_fu_315_p1;
wire   [63:0] bitcast_ln251_25_fu_319_p1;
reg   [63:0] cov_9_reg_836;
reg   [63:0] cov_25_reg_841;
wire   [63:0] bitcast_ln251_10_fu_323_p1;
wire   [63:0] bitcast_ln251_26_fu_327_p1;
reg   [63:0] cov_10_reg_856;
reg   [63:0] cov_26_reg_861;
wire   [63:0] bitcast_ln251_11_fu_331_p1;
wire   [63:0] bitcast_ln251_27_fu_335_p1;
reg   [63:0] cov_11_reg_876;
reg   [63:0] cov_27_reg_881;
wire   [63:0] bitcast_ln251_12_fu_339_p1;
wire   [63:0] bitcast_ln251_28_fu_343_p1;
reg   [63:0] cov_12_reg_896;
reg   [63:0] cov_28_reg_901;
wire   [63:0] bitcast_ln251_13_fu_347_p1;
wire   [63:0] bitcast_ln251_29_fu_351_p1;
reg   [63:0] cov_13_reg_916;
reg   [63:0] cov_29_reg_921;
wire   [63:0] bitcast_ln251_14_fu_355_p1;
wire   [63:0] bitcast_ln251_30_fu_359_p1;
reg   [63:0] cov_30_reg_936;
wire   [63:0] bitcast_ln251_15_fu_363_p1;
wire   [63:0] bitcast_ln251_31_fu_367_p1;
reg   [63:0] cov_31_reg_951;
wire   [63:0] grp_fu_160_p2;
reg   [63:0] mul_reg_956;
wire   [7:0] add_ln256_fu_401_p2;
reg   [7:0] add_ln256_reg_961;
reg   [63:0] mul16_1_reg_966;
reg   [7:0] outCovMatrix_addr_3_reg_971;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage4_subdone;
wire   [63:0] zext_ln255_fu_383_p1;
wire   [63:0] zext_ln256_fu_406_p1;
wire   [63:0] zext_ln255_1_fu_414_p1;
wire   [63:0] zext_ln256_1_fu_436_p1;
reg   [30:0] j_fu_68;
wire   [30:0] add_ln245_fu_220_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_j_2;
reg   [63:0] grp_fu_150_p0;
reg   [63:0] grp_fu_150_p1;
reg   [63:0] grp_fu_155_p0;
reg   [63:0] grp_fu_155_p1;
reg   [63:0] grp_fu_160_p0;
wire   [31:0] shl_ln_fu_228_p3;
wire   [31:0] or_ln254_fu_235_p2;
wire   [7:0] shl_ln_cast_fu_371_p3;
wire   [7:0] add_ln255_fu_378_p2;
wire   [7:0] tmp_s_fu_388_p3;
wire   [7:0] sub_ln256_fu_395_p2;
wire   [7:0] add_ln255_1_fu_410_p2;
wire   [7:0] tmp_15_fu_419_p3;
wire   [7:0] sub_ln256_1_fu_426_p2;
wire   [7:0] add_ln256_1_fu_431_p2;
reg    grp_fu_150_ce;
reg    grp_fu_155_ce;
reg    grp_fu_160_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter8_stage4;
reg    ap_idle_pp0_0to7;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to9;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_68 = 31'd0;
#0 ap_done_reg = 1'b0;
end

dut_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_150_p0),
    .din1(grp_fu_150_p1),
    .ce(grp_fu_150_ce),
    .dout(grp_fu_150_p2)
);

dut_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_155_p0),
    .din1(grp_fu_155_p1),
    .ce(grp_fu_155_ce),
    .dout(grp_fu_155_p2)
);

dut_dmul_64ns_64ns_64_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_8_max_dsp_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_160_p0),
    .din1(d1_cols),
    .ce(grp_fu_160_ce),
    .dout(grp_fu_160_p2)
);

dut_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_68 <= 31'd0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        j_fu_68 <= add_ln245_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln256_reg_961 <= add_ln256_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        cov_10_reg_856 <= grp_fu_150_p2;
        cov_26_reg_861 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        cov_11_reg_876 <= grp_fu_150_p2;
        cov_27_reg_881 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        cov_12_reg_896 <= grp_fu_150_p2;
        cov_28_reg_901 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        cov_13_reg_916 <= grp_fu_150_p2;
        cov_29_reg_921 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        cov_16_reg_566 <= grp_fu_155_p2;
        cov_reg_556 <= grp_fu_150_p2;
        values2Strm_0_read_8_reg_561 <= values2Strm_0_dout;
        values2Strm_1_read_8_reg_571 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cov_17_reg_681 <= grp_fu_155_p2;
        cov_1_reg_676 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        cov_18_reg_701 <= grp_fu_155_p2;
        cov_2_reg_696 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        cov_19_reg_721 <= grp_fu_155_p2;
        cov_3_reg_716 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        cov_20_reg_741 <= grp_fu_155_p2;
        cov_4_reg_736 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        cov_21_reg_761 <= grp_fu_155_p2;
        cov_5_reg_756 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        cov_22_reg_781 <= grp_fu_155_p2;
        cov_6_reg_776 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        cov_23_reg_801 <= grp_fu_155_p2;
        cov_7_reg_796 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        cov_24_reg_821 <= grp_fu_155_p2;
        cov_8_reg_816 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        cov_25_reg_841 <= grp_fu_155_p2;
        cov_9_reg_836 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cov_30_reg_936 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        cov_31_reg_951 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln245_reg_482 <= icmp_ln245_fu_194_p2;
        icmp_ln245_reg_482_pp0_iter1_reg <= icmp_ln245_reg_482;
        icmp_ln245_reg_482_pp0_iter2_reg <= icmp_ln245_reg_482_pp0_iter1_reg;
        icmp_ln245_reg_482_pp0_iter3_reg <= icmp_ln245_reg_482_pp0_iter2_reg;
        icmp_ln245_reg_482_pp0_iter4_reg <= icmp_ln245_reg_482_pp0_iter3_reg;
        icmp_ln245_reg_482_pp0_iter5_reg <= icmp_ln245_reg_482_pp0_iter4_reg;
        icmp_ln245_reg_482_pp0_iter6_reg <= icmp_ln245_reg_482_pp0_iter5_reg;
        icmp_ln245_reg_482_pp0_iter7_reg <= icmp_ln245_reg_482_pp0_iter6_reg;
        icmp_ln245_reg_482_pp0_iter8_reg <= icmp_ln245_reg_482_pp0_iter7_reg;
        j_2_reg_470 <= ap_sig_allocacmp_j_2;
        trunc_ln245_reg_477 <= trunc_ln245_fu_190_p1;
        trunc_ln245_reg_477_pp0_iter1_reg <= trunc_ln245_reg_477;
        trunc_ln245_reg_477_pp0_iter2_reg <= trunc_ln245_reg_477_pp0_iter1_reg;
        trunc_ln245_reg_477_pp0_iter3_reg <= trunc_ln245_reg_477_pp0_iter2_reg;
        trunc_ln245_reg_477_pp0_iter4_reg <= trunc_ln245_reg_477_pp0_iter3_reg;
        trunc_ln245_reg_477_pp0_iter5_reg <= trunc_ln245_reg_477_pp0_iter4_reg;
        trunc_ln245_reg_477_pp0_iter6_reg <= trunc_ln245_reg_477_pp0_iter5_reg;
        trunc_ln245_reg_477_pp0_iter7_reg <= trunc_ln245_reg_477_pp0_iter6_reg;
        trunc_ln245_reg_477_pp0_iter8_reg <= trunc_ln245_reg_477_pp0_iter7_reg;
        trunc_ln245_reg_477_pp0_iter9_reg <= trunc_ln245_reg_477_pp0_iter8_reg;
        values2Strm_0_read_15_reg_666_pp0_iter2_reg <= values2Strm_0_read_15_reg_666;
        values2Strm_0_read_15_reg_666_pp0_iter3_reg <= values2Strm_0_read_15_reg_666_pp0_iter2_reg;
        values2Strm_0_read_15_reg_666_pp0_iter4_reg <= values2Strm_0_read_15_reg_666_pp0_iter3_reg;
        values2Strm_0_read_15_reg_666_pp0_iter5_reg <= values2Strm_0_read_15_reg_666_pp0_iter4_reg;
        values2Strm_0_read_15_reg_666_pp0_iter6_reg <= values2Strm_0_read_15_reg_666_pp0_iter5_reg;
        values2Strm_0_read_15_reg_666_pp0_iter7_reg <= values2Strm_0_read_15_reg_666_pp0_iter6_reg;
        values2Strm_0_read_15_reg_666_pp0_iter8_reg <= values2Strm_0_read_15_reg_666_pp0_iter7_reg;
        values2Strm_1_read_15_reg_671_pp0_iter2_reg <= values2Strm_1_read_15_reg_671;
        values2Strm_1_read_15_reg_671_pp0_iter3_reg <= values2Strm_1_read_15_reg_671_pp0_iter2_reg;
        values2Strm_1_read_15_reg_671_pp0_iter4_reg <= values2Strm_1_read_15_reg_671_pp0_iter3_reg;
        values2Strm_1_read_15_reg_671_pp0_iter5_reg <= values2Strm_1_read_15_reg_671_pp0_iter4_reg;
        values2Strm_1_read_15_reg_671_pp0_iter6_reg <= values2Strm_1_read_15_reg_671_pp0_iter5_reg;
        values2Strm_1_read_15_reg_671_pp0_iter7_reg <= values2Strm_1_read_15_reg_671_pp0_iter6_reg;
        values2Strm_1_read_15_reg_671_pp0_iter8_reg <= values2Strm_1_read_15_reg_671_pp0_iter7_reg;
        zext_ln243_1_cast_reg_465[30 : 0] <= zext_ln243_1_cast_fu_178_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        icmp_ln254_reg_662 <= icmp_ln254_fu_249_p2;
        icmp_ln254_reg_662_pp0_iter1_reg <= icmp_ln254_reg_662;
        icmp_ln254_reg_662_pp0_iter2_reg <= icmp_ln254_reg_662_pp0_iter1_reg;
        icmp_ln254_reg_662_pp0_iter3_reg <= icmp_ln254_reg_662_pp0_iter2_reg;
        icmp_ln254_reg_662_pp0_iter4_reg <= icmp_ln254_reg_662_pp0_iter3_reg;
        icmp_ln254_reg_662_pp0_iter5_reg <= icmp_ln254_reg_662_pp0_iter4_reg;
        icmp_ln254_reg_662_pp0_iter6_reg <= icmp_ln254_reg_662_pp0_iter5_reg;
        icmp_ln254_reg_662_pp0_iter7_reg <= icmp_ln254_reg_662_pp0_iter6_reg;
        icmp_ln254_reg_662_pp0_iter8_reg <= icmp_ln254_reg_662_pp0_iter7_reg;
        trunc_ln245_1_reg_636 <= trunc_ln245_1_fu_225_p1;
        trunc_ln245_1_reg_636_pp0_iter1_reg <= trunc_ln245_1_reg_636;
        trunc_ln245_1_reg_636_pp0_iter2_reg <= trunc_ln245_1_reg_636_pp0_iter1_reg;
        trunc_ln245_1_reg_636_pp0_iter3_reg <= trunc_ln245_1_reg_636_pp0_iter2_reg;
        trunc_ln245_1_reg_636_pp0_iter4_reg <= trunc_ln245_1_reg_636_pp0_iter3_reg;
        trunc_ln245_1_reg_636_pp0_iter5_reg <= trunc_ln245_1_reg_636_pp0_iter4_reg;
        trunc_ln245_1_reg_636_pp0_iter6_reg <= trunc_ln245_1_reg_636_pp0_iter5_reg;
        trunc_ln245_1_reg_636_pp0_iter7_reg <= trunc_ln245_1_reg_636_pp0_iter6_reg;
        trunc_ln245_1_reg_636_pp0_iter8_reg <= trunc_ln245_1_reg_636_pp0_iter7_reg;
        trunc_ln254_reg_651[3 : 1] <= trunc_ln254_fu_241_p1[3 : 1];
        trunc_ln254_reg_651_pp0_iter1_reg[3 : 1] <= trunc_ln254_reg_651[3 : 1];
        trunc_ln254_reg_651_pp0_iter2_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter1_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter3_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter2_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter4_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter3_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter5_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter4_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter6_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter5_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter7_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter6_reg[3 : 1];
        trunc_ln254_reg_651_pp0_iter8_reg[3 : 1] <= trunc_ln254_reg_651_pp0_iter7_reg[3 : 1];
        trunc_ln255_reg_656[7 : 1] <= trunc_ln255_fu_245_p1[7 : 1];
        trunc_ln255_reg_656_pp0_iter1_reg[7 : 1] <= trunc_ln255_reg_656[7 : 1];
        trunc_ln255_reg_656_pp0_iter2_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter1_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter3_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter2_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter4_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter3_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter5_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter4_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter6_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter5_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter7_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter6_reg[7 : 1];
        trunc_ln255_reg_656_pp0_iter8_reg[7 : 1] <= trunc_ln255_reg_656_pp0_iter7_reg[7 : 1];
        values2Strm_0_read_14_reg_641_pp0_iter1_reg <= values2Strm_0_read_14_reg_641;
        values2Strm_0_read_14_reg_641_pp0_iter2_reg <= values2Strm_0_read_14_reg_641_pp0_iter1_reg;
        values2Strm_0_read_14_reg_641_pp0_iter3_reg <= values2Strm_0_read_14_reg_641_pp0_iter2_reg;
        values2Strm_0_read_14_reg_641_pp0_iter4_reg <= values2Strm_0_read_14_reg_641_pp0_iter3_reg;
        values2Strm_0_read_14_reg_641_pp0_iter5_reg <= values2Strm_0_read_14_reg_641_pp0_iter4_reg;
        values2Strm_0_read_14_reg_641_pp0_iter6_reg <= values2Strm_0_read_14_reg_641_pp0_iter5_reg;
        values2Strm_1_read_14_reg_646_pp0_iter1_reg <= values2Strm_1_read_14_reg_646;
        values2Strm_1_read_14_reg_646_pp0_iter2_reg <= values2Strm_1_read_14_reg_646_pp0_iter1_reg;
        values2Strm_1_read_14_reg_646_pp0_iter3_reg <= values2Strm_1_read_14_reg_646_pp0_iter2_reg;
        values2Strm_1_read_14_reg_646_pp0_iter4_reg <= values2Strm_1_read_14_reg_646_pp0_iter3_reg;
        values2Strm_1_read_14_reg_646_pp0_iter5_reg <= values2Strm_1_read_14_reg_646_pp0_iter4_reg;
        values2Strm_1_read_14_reg_646_pp0_iter6_reg <= values2Strm_1_read_14_reg_646_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul16_1_reg_966 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_reg_956 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        outCovMatrix_addr_3_reg_971 <= zext_ln256_1_fu_436_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_164 <= values2Strm_0_dout;
        reg_168 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_172 <= grp_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        values2Strm_0_read_10_reg_596 <= values2Strm_0_dout;
        values2Strm_1_read_10_reg_601 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        values2Strm_0_read_10_reg_596_pp0_iter1_reg <= values2Strm_0_read_10_reg_596;
        values2Strm_0_read_10_reg_596_pp0_iter2_reg <= values2Strm_0_read_10_reg_596_pp0_iter1_reg;
        values2Strm_0_read_10_reg_596_pp0_iter3_reg <= values2Strm_0_read_10_reg_596_pp0_iter2_reg;
        values2Strm_0_read_10_reg_596_pp0_iter4_reg <= values2Strm_0_read_10_reg_596_pp0_iter3_reg;
        values2Strm_1_read_10_reg_601_pp0_iter1_reg <= values2Strm_1_read_10_reg_601;
        values2Strm_1_read_10_reg_601_pp0_iter2_reg <= values2Strm_1_read_10_reg_601_pp0_iter1_reg;
        values2Strm_1_read_10_reg_601_pp0_iter3_reg <= values2Strm_1_read_10_reg_601_pp0_iter2_reg;
        values2Strm_1_read_10_reg_601_pp0_iter4_reg <= values2Strm_1_read_10_reg_601_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        values2Strm_0_read_11_reg_606 <= values2Strm_0_dout;
        values2Strm_1_read_11_reg_611 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        values2Strm_0_read_11_reg_606_pp0_iter1_reg <= values2Strm_0_read_11_reg_606;
        values2Strm_0_read_11_reg_606_pp0_iter2_reg <= values2Strm_0_read_11_reg_606_pp0_iter1_reg;
        values2Strm_0_read_11_reg_606_pp0_iter3_reg <= values2Strm_0_read_11_reg_606_pp0_iter2_reg;
        values2Strm_0_read_11_reg_606_pp0_iter4_reg <= values2Strm_0_read_11_reg_606_pp0_iter3_reg;
        values2Strm_0_read_11_reg_606_pp0_iter5_reg <= values2Strm_0_read_11_reg_606_pp0_iter4_reg;
        values2Strm_1_read_11_reg_611_pp0_iter1_reg <= values2Strm_1_read_11_reg_611;
        values2Strm_1_read_11_reg_611_pp0_iter2_reg <= values2Strm_1_read_11_reg_611_pp0_iter1_reg;
        values2Strm_1_read_11_reg_611_pp0_iter3_reg <= values2Strm_1_read_11_reg_611_pp0_iter2_reg;
        values2Strm_1_read_11_reg_611_pp0_iter4_reg <= values2Strm_1_read_11_reg_611_pp0_iter3_reg;
        values2Strm_1_read_11_reg_611_pp0_iter5_reg <= values2Strm_1_read_11_reg_611_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        values2Strm_0_read_12_reg_616 <= values2Strm_0_dout;
        values2Strm_1_read_12_reg_621 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        values2Strm_0_read_12_reg_616_pp0_iter1_reg <= values2Strm_0_read_12_reg_616;
        values2Strm_0_read_12_reg_616_pp0_iter2_reg <= values2Strm_0_read_12_reg_616_pp0_iter1_reg;
        values2Strm_0_read_12_reg_616_pp0_iter3_reg <= values2Strm_0_read_12_reg_616_pp0_iter2_reg;
        values2Strm_0_read_12_reg_616_pp0_iter4_reg <= values2Strm_0_read_12_reg_616_pp0_iter3_reg;
        values2Strm_0_read_12_reg_616_pp0_iter5_reg <= values2Strm_0_read_12_reg_616_pp0_iter4_reg;
        values2Strm_1_read_12_reg_621_pp0_iter1_reg <= values2Strm_1_read_12_reg_621;
        values2Strm_1_read_12_reg_621_pp0_iter2_reg <= values2Strm_1_read_12_reg_621_pp0_iter1_reg;
        values2Strm_1_read_12_reg_621_pp0_iter3_reg <= values2Strm_1_read_12_reg_621_pp0_iter2_reg;
        values2Strm_1_read_12_reg_621_pp0_iter4_reg <= values2Strm_1_read_12_reg_621_pp0_iter3_reg;
        values2Strm_1_read_12_reg_621_pp0_iter5_reg <= values2Strm_1_read_12_reg_621_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        values2Strm_0_read_13_reg_626 <= values2Strm_0_dout;
        values2Strm_1_read_13_reg_631 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        values2Strm_0_read_13_reg_626_pp0_iter1_reg <= values2Strm_0_read_13_reg_626;
        values2Strm_0_read_13_reg_626_pp0_iter2_reg <= values2Strm_0_read_13_reg_626_pp0_iter1_reg;
        values2Strm_0_read_13_reg_626_pp0_iter3_reg <= values2Strm_0_read_13_reg_626_pp0_iter2_reg;
        values2Strm_0_read_13_reg_626_pp0_iter4_reg <= values2Strm_0_read_13_reg_626_pp0_iter3_reg;
        values2Strm_0_read_13_reg_626_pp0_iter5_reg <= values2Strm_0_read_13_reg_626_pp0_iter4_reg;
        values2Strm_0_read_13_reg_626_pp0_iter6_reg <= values2Strm_0_read_13_reg_626_pp0_iter5_reg;
        values2Strm_1_read_13_reg_631_pp0_iter1_reg <= values2Strm_1_read_13_reg_631;
        values2Strm_1_read_13_reg_631_pp0_iter2_reg <= values2Strm_1_read_13_reg_631_pp0_iter1_reg;
        values2Strm_1_read_13_reg_631_pp0_iter3_reg <= values2Strm_1_read_13_reg_631_pp0_iter2_reg;
        values2Strm_1_read_13_reg_631_pp0_iter4_reg <= values2Strm_1_read_13_reg_631_pp0_iter3_reg;
        values2Strm_1_read_13_reg_631_pp0_iter5_reg <= values2Strm_1_read_13_reg_631_pp0_iter4_reg;
        values2Strm_1_read_13_reg_631_pp0_iter6_reg <= values2Strm_1_read_13_reg_631_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        values2Strm_0_read_14_reg_641 <= values2Strm_0_dout;
        values2Strm_1_read_14_reg_646 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        values2Strm_0_read_15_reg_666 <= values2Strm_0_dout;
        values2Strm_1_read_15_reg_671 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        values2Strm_0_read_2_reg_496 <= values2Strm_0_dout;
        values2Strm_1_read_2_reg_501 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        values2Strm_0_read_3_reg_506 <= values2Strm_0_dout;
        values2Strm_1_read_3_reg_511 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        values2Strm_0_read_3_reg_506_pp0_iter1_reg <= values2Strm_0_read_3_reg_506;
        values2Strm_1_read_3_reg_511_pp0_iter1_reg <= values2Strm_1_read_3_reg_511;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        values2Strm_0_read_4_reg_516 <= values2Strm_0_dout;
        values2Strm_1_read_4_reg_521 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        values2Strm_0_read_4_reg_516_pp0_iter1_reg <= values2Strm_0_read_4_reg_516;
        values2Strm_1_read_4_reg_521_pp0_iter1_reg <= values2Strm_1_read_4_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        values2Strm_0_read_5_reg_526 <= values2Strm_0_dout;
        values2Strm_1_read_5_reg_531 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        values2Strm_0_read_5_reg_526_pp0_iter1_reg <= values2Strm_0_read_5_reg_526;
        values2Strm_0_read_5_reg_526_pp0_iter2_reg <= values2Strm_0_read_5_reg_526_pp0_iter1_reg;
        values2Strm_1_read_5_reg_531_pp0_iter1_reg <= values2Strm_1_read_5_reg_531;
        values2Strm_1_read_5_reg_531_pp0_iter2_reg <= values2Strm_1_read_5_reg_531_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        values2Strm_0_read_6_reg_536 <= values2Strm_0_dout;
        values2Strm_1_read_6_reg_541 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        values2Strm_0_read_6_reg_536_pp0_iter1_reg <= values2Strm_0_read_6_reg_536;
        values2Strm_0_read_6_reg_536_pp0_iter2_reg <= values2Strm_0_read_6_reg_536_pp0_iter1_reg;
        values2Strm_1_read_6_reg_541_pp0_iter1_reg <= values2Strm_1_read_6_reg_541;
        values2Strm_1_read_6_reg_541_pp0_iter2_reg <= values2Strm_1_read_6_reg_541_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        values2Strm_0_read_7_reg_546 <= values2Strm_0_dout;
        values2Strm_1_read_7_reg_551 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        values2Strm_0_read_7_reg_546_pp0_iter1_reg <= values2Strm_0_read_7_reg_546;
        values2Strm_0_read_7_reg_546_pp0_iter2_reg <= values2Strm_0_read_7_reg_546_pp0_iter1_reg;
        values2Strm_0_read_7_reg_546_pp0_iter3_reg <= values2Strm_0_read_7_reg_546_pp0_iter2_reg;
        values2Strm_1_read_7_reg_551_pp0_iter1_reg <= values2Strm_1_read_7_reg_551;
        values2Strm_1_read_7_reg_551_pp0_iter2_reg <= values2Strm_1_read_7_reg_551_pp0_iter1_reg;
        values2Strm_1_read_7_reg_551_pp0_iter3_reg <= values2Strm_1_read_7_reg_551_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        values2Strm_0_read_8_reg_561_pp0_iter1_reg <= values2Strm_0_read_8_reg_561;
        values2Strm_0_read_8_reg_561_pp0_iter2_reg <= values2Strm_0_read_8_reg_561_pp0_iter1_reg;
        values2Strm_0_read_8_reg_561_pp0_iter3_reg <= values2Strm_0_read_8_reg_561_pp0_iter2_reg;
        values2Strm_1_read_8_reg_571_pp0_iter1_reg <= values2Strm_1_read_8_reg_571;
        values2Strm_1_read_8_reg_571_pp0_iter2_reg <= values2Strm_1_read_8_reg_571_pp0_iter1_reg;
        values2Strm_1_read_8_reg_571_pp0_iter3_reg <= values2Strm_1_read_8_reg_571_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        values2Strm_0_read_9_reg_581 <= values2Strm_0_dout;
        values2Strm_1_read_9_reg_591 <= values2Strm_1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        values2Strm_0_read_9_reg_581_pp0_iter1_reg <= values2Strm_0_read_9_reg_581;
        values2Strm_0_read_9_reg_581_pp0_iter2_reg <= values2Strm_0_read_9_reg_581_pp0_iter1_reg;
        values2Strm_0_read_9_reg_581_pp0_iter3_reg <= values2Strm_0_read_9_reg_581_pp0_iter2_reg;
        values2Strm_0_read_9_reg_581_pp0_iter4_reg <= values2Strm_0_read_9_reg_581_pp0_iter3_reg;
        values2Strm_1_read_9_reg_591_pp0_iter1_reg <= values2Strm_1_read_9_reg_591;
        values2Strm_1_read_9_reg_591_pp0_iter2_reg <= values2Strm_1_read_9_reg_591_pp0_iter1_reg;
        values2Strm_1_read_9_reg_591_pp0_iter3_reg <= values2Strm_1_read_9_reg_591_pp0_iter2_reg;
        values2Strm_1_read_9_reg_591_pp0_iter4_reg <= values2Strm_1_read_9_reg_591_pp0_iter3_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (icmp_ln245_reg_482 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln245_reg_482_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter8_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter8_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = 31'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_68;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) 
    | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_150_p0 = reg_172;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_150_p0 = cov_13_reg_916;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_p0 = cov_12_reg_896;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_150_p0 = cov_11_reg_876;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_150_p0 = cov_10_reg_856;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_150_p0 = cov_9_reg_836;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_150_p0 = cov_8_reg_816;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_150_p0 = cov_7_reg_796;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_150_p0 = cov_6_reg_776;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_150_p0 = cov_5_reg_756;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_150_p0 = cov_4_reg_736;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_150_p0 = cov_3_reg_716;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_150_p0 = cov_2_reg_696;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_150_p0 = cov_1_reg_676;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_150_p0 = cov_reg_556;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_150_p0 = bitcast_ln251_fu_200_p1;
    end else begin
        grp_fu_150_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_150_p1 = bitcast_ln251_15_fu_363_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_150_p1 = bitcast_ln251_14_fu_355_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_p1 = bitcast_ln251_13_fu_347_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_150_p1 = bitcast_ln251_12_fu_339_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_150_p1 = bitcast_ln251_11_fu_331_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_150_p1 = bitcast_ln251_10_fu_323_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_150_p1 = bitcast_ln251_9_fu_315_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_150_p1 = bitcast_ln251_8_fu_307_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_150_p1 = bitcast_ln251_7_fu_299_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_150_p1 = bitcast_ln251_6_fu_291_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_150_p1 = bitcast_ln251_5_fu_283_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_150_p1 = bitcast_ln251_4_fu_275_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_150_p1 = bitcast_ln251_3_fu_267_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_150_p1 = bitcast_ln251_2_fu_259_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_150_p1 = bitcast_ln251_1_fu_210_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_150_p1 = 64'd0;
    end else begin
        grp_fu_150_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) 
    | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_155_ce = 1'b1;
    end else begin
        grp_fu_155_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_155_p0 = cov_30_reg_936;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_155_p0 = cov_29_reg_921;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_p0 = cov_28_reg_901;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_155_p0 = cov_27_reg_881;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_155_p0 = cov_26_reg_861;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_155_p0 = cov_25_reg_841;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_155_p0 = cov_24_reg_821;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_155_p0 = cov_23_reg_801;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_155_p0 = cov_22_reg_781;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_155_p0 = cov_21_reg_761;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_155_p0 = cov_20_reg_741;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_155_p0 = cov_19_reg_721;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_155_p0 = cov_18_reg_701;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_155_p0 = cov_17_reg_681;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_155_p0 = cov_16_reg_566;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_155_p0 = bitcast_ln251_16_fu_205_p1;
    end else begin
        grp_fu_155_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_155_p1 = bitcast_ln251_31_fu_367_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_155_p1 = bitcast_ln251_30_fu_359_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_155_p1 = bitcast_ln251_29_fu_351_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_155_p1 = bitcast_ln251_28_fu_343_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_155_p1 = bitcast_ln251_27_fu_335_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_155_p1 = bitcast_ln251_26_fu_327_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_155_p1 = bitcast_ln251_25_fu_319_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_155_p1 = bitcast_ln251_24_fu_311_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_155_p1 = bitcast_ln251_23_fu_303_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_155_p1 = bitcast_ln251_22_fu_295_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_155_p1 = bitcast_ln251_21_fu_287_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_155_p1 = bitcast_ln251_20_fu_279_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_155_p1 = bitcast_ln251_19_fu_271_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_155_p1 = bitcast_ln251_18_fu_263_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_155_p1 = bitcast_ln251_17_fu_215_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_155_p1 = 64'd0;
    end else begin
        grp_fu_155_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            grp_fu_160_p0 = cov_31_reg_951;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            grp_fu_160_p0 = reg_172;
        end else begin
            grp_fu_160_p0 = 'bx;
        end
    end else begin
        grp_fu_160_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            outCovMatrix_address0 = outCovMatrix_addr_3_reg_971;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            outCovMatrix_address0 = zext_ln255_1_fu_414_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            outCovMatrix_address0 = zext_ln256_fu_406_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            outCovMatrix_address0 = zext_ln255_fu_383_p1;
        end else begin
            outCovMatrix_address0 = 'bx;
        end
    end else begin
        outCovMatrix_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        outCovMatrix_ce0 = 1'b1;
    end else begin
        outCovMatrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        outCovMatrix_d0 = mul16_1_reg_966;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        outCovMatrix_d0 = mul_reg_956;
    end else begin
        outCovMatrix_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln254_reg_662_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln254_reg_662_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        outCovMatrix_we0 = 1'b1;
    end else begin
        outCovMatrix_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln245_reg_482 == 1'd0) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2Strm_0_blk_n = values2Strm_0_empty_n;
    end else begin
        values2Strm_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) 
    & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == 
    ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2Strm_0_read = 1'b1;
    end else begin
        values2Strm_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln245_reg_482 == 1'd0) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2Strm_1_blk_n = values2Strm_1_empty_n;
    end else begin
        values2Strm_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) 
    & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == 
    ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln245_reg_482 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        values2Strm_1_read = 1'b1;
    end else begin
        values2Strm_1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter8_stage4) & (ap_idle_pp0_0to7 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln245_fu_220_p2 = (j_2_reg_470 + 31'd1);

assign add_ln255_1_fu_410_p2 = (sub_ln255 + trunc_ln255_reg_656_pp0_iter8_reg);

assign add_ln255_fu_378_p2 = (sub_ln255 + shl_ln_cast_fu_371_p3);

assign add_ln256_1_fu_431_p2 = (sub_ln256_1_fu_426_p2 + zext_ln243);

assign add_ln256_fu_401_p2 = (sub_ln256_fu_395_p2 + zext_ln243);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage10_iter0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_pp0_stage10_iter0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_pp0_stage11_iter0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage12_iter0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_pp0_stage12_iter0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_pp0_stage13_iter0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_pp0_stage14_iter0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_pp0_stage15_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage8_iter0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage8_iter0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage9_iter0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage9_iter0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = ((values2Strm_1_empty_n == 1'b0) | (values2Strm_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = (((values2Strm_1_empty_n == 1'b0) & (icmp_ln245_reg_482 == 1'd0)) | ((icmp_ln245_reg_482 == 1'd0) & (values2Strm_0_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign bitcast_ln251_10_fu_323_p1 = values2Strm_0_read_10_reg_596_pp0_iter4_reg;

assign bitcast_ln251_11_fu_331_p1 = values2Strm_0_read_11_reg_606_pp0_iter5_reg;

assign bitcast_ln251_12_fu_339_p1 = values2Strm_0_read_12_reg_616_pp0_iter5_reg;

assign bitcast_ln251_13_fu_347_p1 = values2Strm_0_read_13_reg_626_pp0_iter6_reg;

assign bitcast_ln251_14_fu_355_p1 = values2Strm_0_read_14_reg_641_pp0_iter6_reg;

assign bitcast_ln251_15_fu_363_p1 = values2Strm_0_read_15_reg_666_pp0_iter8_reg;

assign bitcast_ln251_16_fu_205_p1 = reg_168;

assign bitcast_ln251_17_fu_215_p1 = reg_168;

assign bitcast_ln251_18_fu_263_p1 = values2Strm_1_read_2_reg_501;

assign bitcast_ln251_19_fu_271_p1 = values2Strm_1_read_3_reg_511_pp0_iter1_reg;

assign bitcast_ln251_1_fu_210_p1 = reg_164;

assign bitcast_ln251_20_fu_279_p1 = values2Strm_1_read_4_reg_521_pp0_iter1_reg;

assign bitcast_ln251_21_fu_287_p1 = values2Strm_1_read_5_reg_531_pp0_iter2_reg;

assign bitcast_ln251_22_fu_295_p1 = values2Strm_1_read_6_reg_541_pp0_iter2_reg;

assign bitcast_ln251_23_fu_303_p1 = values2Strm_1_read_7_reg_551_pp0_iter3_reg;

assign bitcast_ln251_24_fu_311_p1 = values2Strm_1_read_8_reg_571_pp0_iter3_reg;

assign bitcast_ln251_25_fu_319_p1 = values2Strm_1_read_9_reg_591_pp0_iter4_reg;

assign bitcast_ln251_26_fu_327_p1 = values2Strm_1_read_10_reg_601_pp0_iter4_reg;

assign bitcast_ln251_27_fu_335_p1 = values2Strm_1_read_11_reg_611_pp0_iter5_reg;

assign bitcast_ln251_28_fu_343_p1 = values2Strm_1_read_12_reg_621_pp0_iter5_reg;

assign bitcast_ln251_29_fu_351_p1 = values2Strm_1_read_13_reg_631_pp0_iter6_reg;

assign bitcast_ln251_2_fu_259_p1 = values2Strm_0_read_2_reg_496;

assign bitcast_ln251_30_fu_359_p1 = values2Strm_1_read_14_reg_646_pp0_iter6_reg;

assign bitcast_ln251_31_fu_367_p1 = values2Strm_1_read_15_reg_671_pp0_iter8_reg;

assign bitcast_ln251_3_fu_267_p1 = values2Strm_0_read_3_reg_506_pp0_iter1_reg;

assign bitcast_ln251_4_fu_275_p1 = values2Strm_0_read_4_reg_516_pp0_iter1_reg;

assign bitcast_ln251_5_fu_283_p1 = values2Strm_0_read_5_reg_526_pp0_iter2_reg;

assign bitcast_ln251_6_fu_291_p1 = values2Strm_0_read_6_reg_536_pp0_iter2_reg;

assign bitcast_ln251_7_fu_299_p1 = values2Strm_0_read_7_reg_546_pp0_iter3_reg;

assign bitcast_ln251_8_fu_307_p1 = values2Strm_0_read_8_reg_561_pp0_iter3_reg;

assign bitcast_ln251_9_fu_315_p1 = values2Strm_0_read_9_reg_581_pp0_iter4_reg;

assign bitcast_ln251_fu_200_p1 = reg_164;

assign icmp_ln245_fu_194_p2 = ((ap_sig_allocacmp_j_2 == trunc_ln) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_249_p2 = ((or_ln254_fu_235_p2 > zext_ln243_1_cast_reg_465) ? 1'b1 : 1'b0);

assign or_ln254_fu_235_p2 = (shl_ln_fu_228_p3 | 32'd1);

assign shl_ln_cast_fu_371_p3 = {{trunc_ln245_1_reg_636_pp0_iter8_reg}, {1'd0}};

assign shl_ln_fu_228_p3 = {{j_2_reg_470}, {1'd0}};

assign sub_ln256_1_fu_426_p2 = (tmp_15_fu_419_p3 - trunc_ln255_reg_656_pp0_iter8_reg);

assign sub_ln256_fu_395_p2 = (tmp_s_fu_388_p3 - shl_ln_cast_fu_371_p3);

assign tmp_15_fu_419_p3 = {{trunc_ln254_reg_651_pp0_iter8_reg}, {4'd0}};

assign tmp_s_fu_388_p3 = {{trunc_ln245_reg_477_pp0_iter9_reg}, {5'd0}};

assign trunc_ln245_1_fu_225_p1 = j_2_reg_470[6:0];

assign trunc_ln245_fu_190_p1 = ap_sig_allocacmp_j_2[2:0];

assign trunc_ln254_fu_241_p1 = or_ln254_fu_235_p2[3:0];

assign trunc_ln255_fu_245_p1 = or_ln254_fu_235_p2[7:0];

assign zext_ln243_1_cast_fu_178_p1 = zext_ln243_1;

assign zext_ln255_1_fu_414_p1 = add_ln255_1_fu_410_p2;

assign zext_ln255_fu_383_p1 = add_ln255_fu_378_p2;

assign zext_ln256_1_fu_436_p1 = add_ln256_1_fu_431_p2;

assign zext_ln256_fu_406_p1 = add_ln256_reg_961;

always @ (posedge ap_clk) begin
    zext_ln243_1_cast_reg_465[31] <= 1'b0;
    trunc_ln254_reg_651[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter1_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter2_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter3_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter4_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter5_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter6_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter7_reg[0] <= 1'b1;
    trunc_ln254_reg_651_pp0_iter8_reg[0] <= 1'b1;
    trunc_ln255_reg_656[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter1_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter2_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter3_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter4_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter5_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter6_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter7_reg[0] <= 1'b1;
    trunc_ln255_reg_656_pp0_iter8_reg[0] <= 1'b1;
end

endmodule //dut_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2
