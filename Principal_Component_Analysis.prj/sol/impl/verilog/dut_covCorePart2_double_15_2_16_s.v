// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dut_covCorePart2_double_15_2_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rows_dout,
        rows_num_data_valid,
        rows_fifo_cap,
        rows_empty_n,
        rows_read,
        cols_dout,
        cols_num_data_valid,
        cols_fifo_cap,
        cols_empty_n,
        cols_read,
        values2Strm_0_dout,
        values2Strm_0_num_data_valid,
        values2Strm_0_fifo_cap,
        values2Strm_0_empty_n,
        values2Strm_0_read,
        values2Strm_1_dout,
        values2Strm_1_num_data_valid,
        values2Strm_1_fifo_cap,
        values2Strm_1_empty_n,
        values2Strm_1_read,
        outCovMatrix_address0,
        outCovMatrix_ce0,
        outCovMatrix_we0,
        outCovMatrix_d0
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] rows_dout;
input  [2:0] rows_num_data_valid;
input  [2:0] rows_fifo_cap;
input   rows_empty_n;
output   rows_read;
input  [31:0] cols_dout;
input  [2:0] cols_num_data_valid;
input  [2:0] cols_fifo_cap;
input   cols_empty_n;
output   cols_read;
input  [63:0] values2Strm_0_dout;
input  [5:0] values2Strm_0_num_data_valid;
input  [5:0] values2Strm_0_fifo_cap;
input   values2Strm_0_empty_n;
output   values2Strm_0_read;
input  [63:0] values2Strm_1_dout;
input  [5:0] values2Strm_1_num_data_valid;
input  [5:0] values2Strm_1_fifo_cap;
input   values2Strm_1_empty_n;
output   values2Strm_1_read;
output  [7:0] outCovMatrix_address0;
output   outCovMatrix_ce0;
output   outCovMatrix_we0;
output  [63:0] outCovMatrix_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rows_read;
reg cols_read;
reg values2Strm_0_read;
reg values2Strm_1_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    rows_blk_n;
reg    cols_blk_n;
reg   [31:0] rows_1_reg_206;
reg    ap_block_state1;
wire   [31:0] add_ln242_fu_103_p2;
reg   [31:0] add_ln242_reg_211;
wire   [63:0] grp_fu_100_p1;
reg   [63:0] conv_reg_216;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_95_p2;
reg   [63:0] d1_cols_reg_221;
wire    ap_CS_fsm_state37;
reg   [30:0] i_7_reg_226;
wire    ap_CS_fsm_state38;
wire   [7:0] trunc_ln255_fu_145_p1;
reg   [7:0] trunc_ln255_reg_234;
wire   [7:0] sub_ln255_fu_158_p2;
reg   [7:0] sub_ln255_reg_239;
reg   [30:0] trunc_ln_reg_244;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_done;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_idle;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_ready;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_0_read;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_1_read;
wire   [7:0] grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_address0;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_ce0;
wire    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_we0;
wire   [63:0] grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_d0;
reg    grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg;
wire   [0:0] icmp_ln243_fu_131_p2;
wire    ap_CS_fsm_state39;
reg   [31:0] indvars_iv10_fu_60;
wire   [31:0] add_ln243_1_fu_176_p2;
reg   [30:0] i_fu_64;
wire   [30:0] add_ln243_fu_136_p2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln243_fu_127_p1;
wire   [3:0] trunc_ln243_fu_123_p1;
wire   [7:0] tmp_fu_150_p3;
reg   [38:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 39'd1;
#0 grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg = 1'b0;
#0 indvars_iv10_fu_60 = 32'd0;
#0 i_fu_64 = 31'd0;
end

dut_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2 grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start),
    .ap_done(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_done),
    .ap_idle(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_idle),
    .ap_ready(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_ready),
    .values2Strm_0_dout(values2Strm_0_dout),
    .values2Strm_0_num_data_valid(6'd0),
    .values2Strm_0_fifo_cap(6'd0),
    .values2Strm_0_empty_n(values2Strm_0_empty_n),
    .values2Strm_0_read(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_0_read),
    .values2Strm_1_dout(values2Strm_1_dout),
    .values2Strm_1_num_data_valid(6'd0),
    .values2Strm_1_fifo_cap(6'd0),
    .values2Strm_1_empty_n(values2Strm_1_empty_n),
    .values2Strm_1_read(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_1_read),
    .trunc_ln(trunc_ln_reg_244),
    .sub_ln255(sub_ln255_reg_239),
    .outCovMatrix_address0(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_address0),
    .outCovMatrix_ce0(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_ce0),
    .outCovMatrix_we0(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_we0),
    .outCovMatrix_d0(grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_d0),
    .zext_ln243(trunc_ln255_reg_234),
    .d1_cols(d1_cols_reg_221),
    .zext_ln243_1(i_7_reg_226)
);

dut_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(conv_reg_216),
    .ce(1'b1),
    .dout(grp_fu_95_p2)
);

dut_sitodp_32ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_5_no_dsp_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln242_reg_211),
    .ce(1'b1),
    .dout(grp_fu_100_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd1))) begin
            grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_ready == 1'b1)) begin
            grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        i_fu_64 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd1))) begin
        i_fu_64 <= add_ln243_fu_136_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        indvars_iv10_fu_60 <= 32'd2;
    end else if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd1))) begin
        indvars_iv10_fu_60 <= add_ln243_1_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        add_ln242_reg_211 <= add_ln242_fu_103_p2;
        rows_1_reg_206 <= rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_reg_216 <= grp_fu_100_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        d1_cols_reg_221 <= grp_fu_95_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_7_reg_226 <= i_fu_64;
        sub_ln255_reg_239 <= sub_ln255_fu_158_p2;
        trunc_ln255_reg_234 <= trunc_ln255_fu_145_p1;
        trunc_ln_reg_244 <= {{indvars_iv10_fu_60[31:1]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_blk_n = cols_empty_n;
    end else begin
        cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        cols_read = 1'b1;
    end else begin
        cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        values2Strm_0_read = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_0_read;
    end else begin
        values2Strm_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        values2Strm_1_read = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_values2Strm_1_read;
    end else begin
        values2Strm_1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln243_fu_131_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln242_fu_103_p2 = ($signed(cols_dout) + $signed(32'd4294967295));

assign add_ln243_1_fu_176_p2 = (indvars_iv10_fu_60 + 32'd1);

assign add_ln243_fu_136_p2 = (i_fu_64 + 31'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_ap_start_reg;

assign icmp_ln243_fu_131_p2 = (($signed(zext_ln243_fu_127_p1) < $signed(rows_1_reg_206)) ? 1'b1 : 1'b0);

assign outCovMatrix_address0 = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_address0;

assign outCovMatrix_ce0 = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_ce0;

assign outCovMatrix_d0 = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_d0;

assign outCovMatrix_we0 = grp_covCorePart2_double_15_2_16_Pipeline_VITIS_LOOP_245_2_fu_80_outCovMatrix_we0;

assign sub_ln255_fu_158_p2 = (tmp_fu_150_p3 - trunc_ln255_fu_145_p1);

assign tmp_fu_150_p3 = {{trunc_ln243_fu_123_p1}, {4'd0}};

assign trunc_ln243_fu_123_p1 = i_fu_64[3:0];

assign trunc_ln255_fu_145_p1 = i_fu_64[7:0];

assign zext_ln243_fu_127_p1 = i_fu_64;

endmodule //dut_covCorePart2_double_15_2_16_s
