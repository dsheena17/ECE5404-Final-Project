// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module dut_funcDataflow_double_16_1_16_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i,
        Order_address0,
        Order_ce0,
        Order_q0,
        m_c_right_0_val,
        m_c_right_1_val,
        m_c_right_2_val,
        m_c_right_3_val,
        m_c_right_4_val,
        m_c_right_5_val,
        m_c_right_6_val,
        m_c_right_7_val,
        m_s_right_0_val,
        m_s_right_1_val,
        m_s_right_2_val,
        m_s_right_3_val,
        m_s_right_4_val,
        m_s_right_5_val,
        m_s_right_6_val,
        m_s_right_7_val,
        dataA_address0,
        dataA_ce0,
        dataA_we0,
        dataA_d0,
        dataA_q0,
        dataA_address1,
        dataA_ce1,
        dataA_we1,
        dataA_d1,
        dataA_q1,
        dataU_out_address0,
        dataU_out_ce0,
        dataU_out_we0,
        dataU_out_d0,
        dataU_out_q0,
        dataU_out_address1,
        dataU_out_ce1,
        dataU_out_we1,
        dataU_out_d1,
        dataU_out_q1,
        lda,
        grp_fu_1231_p_din0,
        grp_fu_1231_p_din1,
        grp_fu_1231_p_dout0,
        grp_fu_1231_p_ce,
        grp_fu_1235_p_din0,
        grp_fu_1235_p_din1,
        grp_fu_1235_p_dout0,
        grp_fu_1235_p_ce
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state5 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd8;
parameter    ap_ST_fsm_state7 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] i;
output  [7:0] Order_address0;
output   Order_ce0;
input  [31:0] Order_q0;
input  [63:0] m_c_right_0_val;
input  [63:0] m_c_right_1_val;
input  [63:0] m_c_right_2_val;
input  [63:0] m_c_right_3_val;
input  [63:0] m_c_right_4_val;
input  [63:0] m_c_right_5_val;
input  [63:0] m_c_right_6_val;
input  [63:0] m_c_right_7_val;
input  [63:0] m_s_right_0_val;
input  [63:0] m_s_right_1_val;
input  [63:0] m_s_right_2_val;
input  [63:0] m_s_right_3_val;
input  [63:0] m_s_right_4_val;
input  [63:0] m_s_right_5_val;
input  [63:0] m_s_right_6_val;
input  [63:0] m_s_right_7_val;
output  [7:0] dataA_address0;
output   dataA_ce0;
output   dataA_we0;
output  [63:0] dataA_d0;
input  [63:0] dataA_q0;
output  [7:0] dataA_address1;
output   dataA_ce1;
output   dataA_we1;
output  [63:0] dataA_d1;
input  [63:0] dataA_q1;
output  [7:0] dataU_out_address0;
output   dataU_out_ce0;
output   dataU_out_we0;
output  [63:0] dataU_out_d0;
input  [63:0] dataU_out_q0;
output  [7:0] dataU_out_address1;
output   dataU_out_ce1;
output   dataU_out_we1;
output  [63:0] dataU_out_d1;
input  [63:0] dataU_out_q1;
input  [31:0] lda;
output  [63:0] grp_fu_1231_p_din0;
output  [63:0] grp_fu_1231_p_din1;
input  [63:0] grp_fu_1231_p_dout0;
output   grp_fu_1231_p_ce;
output  [63:0] grp_fu_1235_p_din0;
output  [63:0] grp_fu_1235_p_din1;
input  [63:0] grp_fu_1235_p_dout0;
output   grp_fu_1235_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Order_ce0;
reg[7:0] dataA_address0;
reg dataA_ce0;
reg dataA_we0;
reg[63:0] dataA_d0;
reg[7:0] dataA_address1;
reg dataA_ce1;
reg dataA_we1;
reg[63:0] dataA_d1;
reg dataU_out_ce0;
reg dataU_out_we0;
reg dataU_out_ce1;
reg dataU_out_we1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] tmp_14_fu_422_p3;
reg   [7:0] tmp_14_reg_722;
wire   [4:0] select_ln883_fu_478_p3;
reg   [4:0] select_ln883_reg_730;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] select_ln883_1_fu_486_p3;
reg   [1:0] select_ln883_1_reg_735;
reg   [1:0] select_ln883_1_reg_735_pp0_iter1_reg;
reg   [3:0] Order1_addr_reg_739;
reg   [3:0] Order1_addr_reg_739_pp0_iter1_reg;
reg   [3:0] Order1_1_addr_reg_744;
reg   [3:0] Order1_1_addr_reg_744_pp0_iter1_reg;
reg   [3:0] Order1_2_addr_reg_749;
reg   [3:0] Order1_2_addr_reg_749_pp0_iter1_reg;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln883_fu_448_p2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] Order1_address0;
reg    Order1_ce0;
reg    Order1_we0;
wire   [31:0] Order1_q0;
reg    Order1_ce1;
wire   [31:0] Order1_q1;
reg   [3:0] Order1_1_address0;
reg    Order1_1_ce0;
reg    Order1_1_we0;
wire   [31:0] Order1_1_q0;
reg    Order1_1_ce1;
wire   [31:0] Order1_1_q1;
reg   [3:0] Order1_2_address0;
reg    Order1_2_ce0;
reg    Order1_2_we0;
wire   [31:0] Order1_2_q0;
reg    Order1_2_ce1;
wire   [31:0] Order1_2_q1;
reg   [3:0] m_c_right1_address0;
reg    m_c_right1_ce0;
reg    m_c_right1_we0;
wire   [63:0] m_c_right1_q0;
reg   [3:0] m_c_right1_1_address0;
reg    m_c_right1_1_ce0;
reg    m_c_right1_1_we0;
wire   [63:0] m_c_right1_1_q0;
reg   [3:0] m_c_right1_2_address0;
reg    m_c_right1_2_ce0;
reg    m_c_right1_2_we0;
wire   [63:0] m_c_right1_2_q0;
reg   [3:0] m_s_right1_address0;
reg    m_s_right1_ce0;
reg    m_s_right1_we0;
wire   [63:0] m_s_right1_q0;
reg   [3:0] m_s_right1_1_address0;
reg    m_s_right1_1_ce0;
reg    m_s_right1_1_we0;
wire   [63:0] m_s_right1_1_q0;
reg   [3:0] m_s_right1_2_address0;
reg    m_s_right1_2_ce0;
reg    m_s_right1_2_we0;
wire   [63:0] m_s_right1_2_q0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_ap_start;
wire    grp_unrollRow_double_16_1_16_9_fu_401_ap_done;
wire    grp_unrollRow_double_16_1_16_9_fu_401_ap_idle;
wire    grp_unrollRow_double_16_1_16_9_fu_401_ap_ready;
wire   [3:0] grp_unrollRow_double_16_1_16_9_fu_401_Order_address0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_Order_ce0;
reg   [31:0] grp_unrollRow_double_16_1_16_9_fu_401_Order_q0;
wire   [3:0] grp_unrollRow_double_16_1_16_9_fu_401_Order_address1;
wire    grp_unrollRow_double_16_1_16_9_fu_401_Order_ce1;
reg   [31:0] grp_unrollRow_double_16_1_16_9_fu_401_Order_q1;
wire   [3:0] grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_address0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_ce0;
reg   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_q0;
wire   [3:0] grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_address0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_ce0;
reg   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_q0;
wire   [7:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce0;
wire    grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we0;
wire   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d0;
reg   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q0;
wire   [7:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address1;
wire    grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce1;
wire    grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we1;
wire   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d1;
reg   [63:0] grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_ap_start;
wire    grp_unrollCol_double_16_1_16_10_fu_412_ap_done;
wire    grp_unrollCol_double_16_1_16_10_fu_412_ap_idle;
wire    grp_unrollCol_double_16_1_16_10_fu_412_ap_ready;
wire   [3:0] grp_unrollCol_double_16_1_16_10_fu_412_Order_address0;
wire    grp_unrollCol_double_16_1_16_10_fu_412_Order_ce0;
wire   [3:0] grp_unrollCol_double_16_1_16_10_fu_412_Order_address1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_Order_ce1;
wire   [3:0] grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_address0;
wire    grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_ce0;
wire   [3:0] grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_address0;
wire    grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_ce0;
wire   [7:0] grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address0;
wire    grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce0;
wire    grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we0;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d0;
wire   [7:0] grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we1;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d1;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din0;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_ce;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din0;
wire   [63:0] grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din1;
wire    grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_ce;
reg    grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg    grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg;
wire   [63:0] zext_ln887_fu_494_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln890_1_fu_610_p1;
reg   [4:0] j_fu_124;
wire   [4:0] add_ln887_fu_581_p2;
reg   [1:0] k_fu_128;
reg   [5:0] indvar_flatten_fu_132;
wire   [5:0] add_ln883_1_fu_454_p2;
wire   [63:0] tmp_fu_511_p19;
wire   [63:0] tmp_s_fu_546_p19;
wire   [0:0] icmp_ln887_fu_472_p2;
wire   [1:0] add_ln883_fu_466_p2;
wire   [63:0] tmp_fu_511_p17;
wire   [2:0] trunc_ln887_fu_507_p1;
wire   [63:0] tmp_s_fu_546_p17;
wire   [7:0] zext_ln890_fu_602_p1;
wire   [7:0] add_ln890_fu_605_p2;
reg    grp_fu_759_ce;
reg    grp_fu_763_ce;
reg    ap_block_state8_on_subcall_done;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [2:0] tmp_fu_511_p1;
wire   [2:0] tmp_fu_511_p3;
wire   [2:0] tmp_fu_511_p5;
wire   [2:0] tmp_fu_511_p7;
wire  signed [2:0] tmp_fu_511_p9;
wire  signed [2:0] tmp_fu_511_p11;
wire  signed [2:0] tmp_fu_511_p13;
wire  signed [2:0] tmp_fu_511_p15;
wire   [2:0] tmp_s_fu_546_p1;
wire   [2:0] tmp_s_fu_546_p3;
wire   [2:0] tmp_s_fu_546_p5;
wire   [2:0] tmp_s_fu_546_p7;
wire  signed [2:0] tmp_s_fu_546_p9;
wire  signed [2:0] tmp_s_fu_546_p11;
wire  signed [2:0] tmp_s_fu_546_p13;
wire  signed [2:0] tmp_s_fu_546_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg = 1'b0;
#0 grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg = 1'b0;
#0 j_fu_124 = 5'd0;
#0 k_fu_128 = 2'd0;
#0 indvar_flatten_fu_132 = 6'd0;
end

dut_funcDataflow_double_16_1_16_8_Order1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Order1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Order1_address0),
    .ce0(Order1_ce0),
    .we0(Order1_we0),
    .d0(Order_q0),
    .q0(Order1_q0),
    .address1(grp_unrollRow_double_16_1_16_9_fu_401_Order_address1),
    .ce1(Order1_ce1),
    .q1(Order1_q1)
);

dut_funcDataflow_double_16_1_16_8_Order1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Order1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Order1_1_address0),
    .ce0(Order1_1_ce0),
    .we0(Order1_1_we0),
    .d0(Order_q0),
    .q0(Order1_1_q0),
    .address1(grp_unrollRow_double_16_1_16_9_fu_401_Order_address1),
    .ce1(Order1_1_ce1),
    .q1(Order1_1_q1)
);

dut_funcDataflow_double_16_1_16_8_Order1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Order1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Order1_2_address0),
    .ce0(Order1_2_ce0),
    .we0(Order1_2_we0),
    .d0(Order_q0),
    .q0(Order1_2_q0),
    .address1(grp_unrollCol_double_16_1_16_10_fu_412_Order_address1),
    .ce1(Order1_2_ce1),
    .q1(Order1_2_q1)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_c_right1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_c_right1_address0),
    .ce0(m_c_right1_ce0),
    .we0(m_c_right1_we0),
    .d0(tmp_fu_511_p19),
    .q0(m_c_right1_q0)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_c_right1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_c_right1_1_address0),
    .ce0(m_c_right1_1_ce0),
    .we0(m_c_right1_1_we0),
    .d0(tmp_fu_511_p19),
    .q0(m_c_right1_1_q0)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_c_right1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_c_right1_2_address0),
    .ce0(m_c_right1_2_ce0),
    .we0(m_c_right1_2_we0),
    .d0(tmp_fu_511_p19),
    .q0(m_c_right1_2_q0)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_s_right1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_s_right1_address0),
    .ce0(m_s_right1_ce0),
    .we0(m_s_right1_we0),
    .d0(tmp_s_fu_546_p19),
    .q0(m_s_right1_q0)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_s_right1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_s_right1_1_address0),
    .ce0(m_s_right1_1_ce0),
    .we0(m_s_right1_1_we0),
    .d0(tmp_s_fu_546_p19),
    .q0(m_s_right1_1_q0)
);

dut_funcDataflow_double_16_1_16_8_m_c_right1_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
m_s_right1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_s_right1_2_address0),
    .ce0(m_s_right1_2_ce0),
    .we0(m_s_right1_2_we0),
    .d0(tmp_s_fu_546_p19),
    .q0(m_s_right1_2_q0)
);

dut_unrollRow_double_16_1_16_9 grp_unrollRow_double_16_1_16_9_fu_401(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_unrollRow_double_16_1_16_9_fu_401_ap_start),
    .ap_done(grp_unrollRow_double_16_1_16_9_fu_401_ap_done),
    .ap_idle(grp_unrollRow_double_16_1_16_9_fu_401_ap_idle),
    .ap_ready(grp_unrollRow_double_16_1_16_9_fu_401_ap_ready),
    .lda(lda),
    .Order_address0(grp_unrollRow_double_16_1_16_9_fu_401_Order_address0),
    .Order_ce0(grp_unrollRow_double_16_1_16_9_fu_401_Order_ce0),
    .Order_q0(grp_unrollRow_double_16_1_16_9_fu_401_Order_q0),
    .Order_address1(grp_unrollRow_double_16_1_16_9_fu_401_Order_address1),
    .Order_ce1(grp_unrollRow_double_16_1_16_9_fu_401_Order_ce1),
    .Order_q1(grp_unrollRow_double_16_1_16_9_fu_401_Order_q1),
    .m_c_right_address0(grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_address0),
    .m_c_right_ce0(grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_ce0),
    .m_c_right_q0(grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_q0),
    .m_s_right_address0(grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_address0),
    .m_s_right_ce0(grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_ce0),
    .m_s_right_q0(grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_q0),
    .dataA16_address0(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address0),
    .dataA16_ce0(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce0),
    .dataA16_we0(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we0),
    .dataA16_d0(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d0),
    .dataA16_q0(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q0),
    .dataA16_address1(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address1),
    .dataA16_ce1(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce1),
    .dataA16_we1(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we1),
    .dataA16_d1(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d1),
    .dataA16_q1(grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q1)
);

dut_unrollCol_double_16_1_16_10 grp_unrollCol_double_16_1_16_10_fu_412(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_unrollCol_double_16_1_16_10_fu_412_ap_start),
    .ap_done(grp_unrollCol_double_16_1_16_10_fu_412_ap_done),
    .ap_idle(grp_unrollCol_double_16_1_16_10_fu_412_ap_idle),
    .ap_ready(grp_unrollCol_double_16_1_16_10_fu_412_ap_ready),
    .lda(lda),
    .Order_address0(grp_unrollCol_double_16_1_16_10_fu_412_Order_address0),
    .Order_ce0(grp_unrollCol_double_16_1_16_10_fu_412_Order_ce0),
    .Order_q0(Order1_2_q0),
    .Order_address1(grp_unrollCol_double_16_1_16_10_fu_412_Order_address1),
    .Order_ce1(grp_unrollCol_double_16_1_16_10_fu_412_Order_ce1),
    .Order_q1(Order1_2_q1),
    .m_c_right_address0(grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_address0),
    .m_c_right_ce0(grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_ce0),
    .m_c_right_q0(m_c_right1_2_q0),
    .m_s_right_address0(grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_address0),
    .m_s_right_ce0(grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_ce0),
    .m_s_right_q0(m_s_right1_2_q0),
    .dataA16_address0(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address0),
    .dataA16_ce0(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce0),
    .dataA16_we0(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we0),
    .dataA16_d0(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d0),
    .dataA16_q0(dataA_q0),
    .dataA16_address1(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address1),
    .dataA16_ce1(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce1),
    .dataA16_we1(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we1),
    .dataA16_d1(grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d1),
    .dataA16_q1(dataA_q1),
    .grp_fu_759_p_din0(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din0),
    .grp_fu_759_p_din1(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din1),
    .grp_fu_759_p_dout0(grp_fu_1231_p_dout0),
    .grp_fu_759_p_ce(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_ce),
    .grp_fu_763_p_din0(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din0),
    .grp_fu_763_p_din1(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din1),
    .grp_fu_763_p_dout0(grp_fu_1235_p_dout0),
    .grp_fu_763_p_ce(grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_ce)
);

dut_sparsemux_17_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 64 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 64 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 64 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 64 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_17_3_64_1_1_U196(
    .din0(m_c_right_0_val),
    .din1(m_c_right_1_val),
    .din2(m_c_right_2_val),
    .din3(m_c_right_3_val),
    .din4(m_c_right_4_val),
    .din5(m_c_right_5_val),
    .din6(m_c_right_6_val),
    .din7(m_c_right_7_val),
    .def(tmp_fu_511_p17),
    .sel(trunc_ln887_fu_507_p1),
    .dout(tmp_fu_511_p19)
);

dut_sparsemux_17_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 64 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 64 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 64 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 64 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_17_3_64_1_1_U197(
    .din0(m_s_right_0_val),
    .din1(m_s_right_1_val),
    .din2(m_s_right_2_val),
    .din3(m_s_right_3_val),
    .din4(m_s_right_4_val),
    .din5(m_s_right_5_val),
    .din6(m_s_right_6_val),
    .din7(m_s_right_7_val),
    .def(tmp_s_fu_546_p17),
    .sel(trunc_ln887_fu_507_p1),
    .dout(tmp_s_fu_546_p19)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg <= 1'b1;
        end else if ((grp_unrollCol_double_16_1_16_10_fu_412_ap_ready == 1'b1)) begin
            grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg <= 1'b1;
        end else if ((grp_unrollRow_double_16_1_16_9_fu_401_ap_ready == 1'b1)) begin
            grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_fu_132 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_fu_132 <= add_ln883_1_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_fu_124 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_fu_124 <= add_ln887_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_fu_128 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_fu_128 <= select_ln883_1_fu_486_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_1_addr_reg_744 <= zext_ln887_fu_494_p1;
        Order1_1_addr_reg_744_pp0_iter1_reg <= Order1_1_addr_reg_744;
        Order1_2_addr_reg_749 <= zext_ln887_fu_494_p1;
        Order1_2_addr_reg_749_pp0_iter1_reg <= Order1_2_addr_reg_749;
        Order1_addr_reg_739 <= zext_ln887_fu_494_p1;
        Order1_addr_reg_739_pp0_iter1_reg <= Order1_addr_reg_739;
        select_ln883_1_reg_735 <= select_ln883_1_fu_486_p3;
        select_ln883_1_reg_735_pp0_iter1_reg <= select_ln883_1_reg_735;
        select_ln883_reg_730 <= select_ln883_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_14_reg_722[7 : 4] <= tmp_14_fu_422_p3[7 : 4];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Order1_1_address0 = Order1_1_addr_reg_744_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_Order_address0;
    end else begin
        Order1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_Order_ce0;
    end else begin
        Order1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_1_ce1 = grp_unrollRow_double_16_1_16_9_fu_401_Order_ce1;
    end else begin
        Order1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln883_1_reg_735_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_1_we0 = 1'b1;
    end else begin
        Order1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Order1_2_address0 = Order1_2_addr_reg_749_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_2_address0 = grp_unrollCol_double_16_1_16_10_fu_412_Order_address0;
    end else begin
        Order1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_2_ce0 = grp_unrollCol_double_16_1_16_10_fu_412_Order_ce0;
    end else begin
        Order1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Order1_2_ce1 = grp_unrollCol_double_16_1_16_10_fu_412_Order_ce1;
    end else begin
        Order1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln883_1_reg_735_pp0_iter1_reg == 2'd0) & ~(select_ln883_1_reg_735_pp0_iter1_reg == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_2_we0 = 1'b1;
    end else begin
        Order1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Order1_address0 = Order1_addr_reg_739_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Order1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_Order_address0;
    end else begin
        Order1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Order1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_Order_ce0;
    end else begin
        Order1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Order1_ce1 = grp_unrollRow_double_16_1_16_9_fu_401_Order_ce1;
    end else begin
        Order1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln883_1_reg_735_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order1_we0 = 1'b1;
    end else begin
        Order1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Order_ce0 = 1'b1;
    end else begin
        Order_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_unrollRow_double_16_1_16_9_fu_401_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state8_on_subcall_done)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln883_fu_448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_address0 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_address0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address0;
    end else begin
        dataA_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_address1 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_address1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address1;
    end else begin
        dataA_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_ce0 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce0;
    end else begin
        dataA_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_ce1 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_ce1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce1;
    end else begin
        dataA_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_d0 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_d0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d0;
    end else begin
        dataA_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_d1 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_d1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_d1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d1;
    end else begin
        dataA_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_we0 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_we0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we0;
    end else begin
        dataA_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataA_we1 = grp_unrollCol_double_16_1_16_10_fu_412_dataA16_we1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dataA_we1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we1;
    end else begin
        dataA_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataU_out_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce0;
    end else begin
        dataU_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataU_out_ce1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_ce1;
    end else begin
        dataU_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataU_out_we0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we0;
    end else begin
        dataU_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dataU_out_we1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_we1;
    end else begin
        dataU_out_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_759_ce = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_ce;
    end else begin
        grp_fu_759_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_763_ce = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_ce;
    end else begin
        grp_fu_763_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q0 = Order1_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q0 = Order1_q0;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q1 = Order1_1_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q1 = Order1_q1;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_Order_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q0 = dataU_out_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q0 = dataA_q0;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q1 = dataU_out_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q1 = dataA_q1;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_dataA16_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_q0 = m_c_right1_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_q0 = m_c_right1_q0;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_q0 = m_s_right1_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_q0 = m_s_right1_q0;
    end else begin
        grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_c_right1_1_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_c_right1_1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_address0;
    end else begin
        m_c_right1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_c_right1_1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_ce0;
    end else begin
        m_c_right1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln883_1_fu_486_p3 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_1_we0 = 1'b1;
    end else begin
        m_c_right1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_c_right1_2_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_c_right1_2_address0 = grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_address0;
    end else begin
        m_c_right1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_c_right1_2_ce0 = grp_unrollCol_double_16_1_16_10_fu_412_m_c_right_ce0;
    end else begin
        m_c_right1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln883_1_fu_486_p3 == 2'd0) & ~(select_ln883_1_fu_486_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_2_we0 = 1'b1;
    end else begin
        m_c_right1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_c_right1_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_c_right1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_address0;
    end else begin
        m_c_right1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_c_right1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_m_c_right_ce0;
    end else begin
        m_c_right1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln883_1_fu_486_p3 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_c_right1_we0 = 1'b1;
    end else begin
        m_c_right1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_s_right1_1_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_s_right1_1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_address0;
    end else begin
        m_s_right1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_s_right1_1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_ce0;
    end else begin
        m_s_right1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln883_1_fu_486_p3 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_1_we0 = 1'b1;
    end else begin
        m_s_right1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_s_right1_2_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_s_right1_2_address0 = grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_address0;
    end else begin
        m_s_right1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        m_s_right1_2_ce0 = grp_unrollCol_double_16_1_16_10_fu_412_m_s_right_ce0;
    end else begin
        m_s_right1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln883_1_fu_486_p3 == 2'd0) & ~(select_ln883_1_fu_486_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_2_we0 = 1'b1;
    end else begin
        m_s_right1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m_s_right1_address0 = zext_ln887_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_s_right1_address0 = grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_address0;
    end else begin
        m_s_right1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        m_s_right1_ce0 = grp_unrollRow_double_16_1_16_9_fu_401_m_s_right_ce0;
    end else begin
        m_s_right1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln883_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (select_ln883_1_fu_486_p3 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_s_right1_we0 = 1'b1;
    end else begin
        m_s_right1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln883_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln883_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_unrollRow_double_16_1_16_9_fu_401_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Order_address0 = zext_ln890_1_fu_610_p1;

assign add_ln883_1_fu_454_p2 = (indvar_flatten_fu_132 + 6'd1);

assign add_ln883_fu_466_p2 = (k_fu_128 + 2'd1);

assign add_ln887_fu_581_p2 = (select_ln883_fu_478_p3 + 5'd1);

assign add_ln890_fu_605_p2 = (tmp_14_reg_722 + zext_ln890_fu_602_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_unrollCol_double_16_1_16_10_fu_412_ap_done == 1'b0) | (grp_unrollRow_double_16_1_16_9_fu_401_ap_done == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dataU_out_address0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address0;

assign dataU_out_address1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_address1;

assign dataU_out_d0 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d0;

assign dataU_out_d1 = grp_unrollRow_double_16_1_16_9_fu_401_dataA16_d1;

assign grp_fu_1231_p_ce = grp_fu_759_ce;

assign grp_fu_1231_p_din0 = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din0;

assign grp_fu_1231_p_din1 = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_759_p_din1;

assign grp_fu_1235_p_ce = grp_fu_763_ce;

assign grp_fu_1235_p_din0 = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din0;

assign grp_fu_1235_p_din1 = grp_unrollCol_double_16_1_16_10_fu_412_grp_fu_763_p_din1;

assign grp_unrollCol_double_16_1_16_10_fu_412_ap_start = grp_unrollCol_double_16_1_16_10_fu_412_ap_start_reg;

assign grp_unrollRow_double_16_1_16_9_fu_401_ap_start = grp_unrollRow_double_16_1_16_9_fu_401_ap_start_reg;

assign icmp_ln883_fu_448_p2 = ((indvar_flatten_fu_132 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_472_p2 = ((j_fu_124 == 5'd16) ? 1'b1 : 1'b0);

assign select_ln883_1_fu_486_p3 = ((icmp_ln887_fu_472_p2[0:0] == 1'b1) ? add_ln883_fu_466_p2 : k_fu_128);

assign select_ln883_fu_478_p3 = ((icmp_ln887_fu_472_p2[0:0] == 1'b1) ? 5'd0 : j_fu_124);

assign tmp_14_fu_422_p3 = {{i}, {4'd0}};

assign tmp_fu_511_p17 = 'bx;

assign tmp_s_fu_546_p17 = 'bx;

assign trunc_ln887_fu_507_p1 = select_ln883_fu_478_p3[2:0];

assign zext_ln887_fu_494_p1 = select_ln883_fu_478_p3;

assign zext_ln890_1_fu_610_p1 = add_ln890_fu_605_p2;

assign zext_ln890_fu_602_p1 = select_ln883_reg_730;

always @ (posedge ap_clk) begin
    tmp_14_reg_722[3:0] <= 4'b0000;
end

endmodule //dut_funcDataflow_double_16_1_16_8
